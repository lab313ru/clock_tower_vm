# sleigh specification file for Skeleton Processor
#   >> see docs/languages/sleigh.htm or sleigh.pdf for Sleigh syntax
# Other language modules (see Ghidra/Processors) may provide better examples
# when creating a new language module.

define endian=little;
define alignment=1;

define space ram     type=ram_space      size=4  default;
define space varsc   type=ram_space      size=2  ;
define space varsd   type=ram_space      size=2  ;
define space varse   type=ram_space      size=2  ;
define space varsf   type=ram_space      size=2  ;
define space refs    type=ram_space      size=4  ;

define space register type=register_space size=4;

define register offset=0 size=4 [PC SP RA DUMMY RESULT pairs_read pairs_true cmp_dest ands_count];

################################################################

define token opword (16)
   op_msb     = (8,15)
   op_lsb     = (0,7)
;

define token data16 (16)
   	var4_1     = (12,15)
	var4_2     = (12,15)
	var4_3     = (12,15)
	var4_4     = (12,15)
	var4_5     = (12,15)
	var4_6     = (12,15)
	var4_7     = (12,15)
	var4_8     = (12,15)
	var4_9     = (12,15)
	var4_10     = (12,15)
	var4_11     = (12,15)
	var4_12     = (12,15)
	var4_13     = (12,15)
	var4_14     = (12,15)
	var4_15     = (12,15)
	var4_16     = (12,15)
	var4_17     = (12,15)
	var4_18     = (12,15)
	var4_19     = (12,15)
	var4_20     = (12,15)
	var4_21     = (12,15)
	var4_22     = (12,15)
	var4_23     = (12,15)
	var4_24     = (12,15)
	var4_25     = (12,15)
	var4_26     = (12,15)
	var4_27     = (12,15)
	var4_28     = (12,15)
	var4_29     = (12,15)
	var4_30     = (12,15)
	var4_31     = (12,15)
	var4_32     = (12,15)
	var4_33     = (12,15)
	var4_34     = (12,15)
	var4_35     = (12,15)
	var4_36     = (12,15)
	var4_37     = (12,15)
	var4_38     = (12,15)
	var4_39     = (12,15)
	var4_40     = (12,15)
	var4_41     = (12,15)
	var4_42     = (12,15)
	var4_43     = (12,15)
	var4_44     = (12,15)
	var4_45     = (12,15)
	var4_46     = (12,15)
	var4_47     = (12,15)
	var4_48     = (12,15)
	var4_49     = (12,15)
	var4_50     = (12,15)
	var4_51     = (12,15)
	var4_52     = (12,15)
	var4_53     = (12,15)
	var4_54     = (12,15)
	var4_55     = (12,15)
	var4_56     = (12,15)
	var4_57     = (12,15)
	var4_58     = (12,15)
	var4_59     = (12,15)
	var4_60     = (12,15)
	var4_61     = (12,15)
	var4_62     = (12,15)
	var4_63     = (12,15)
	var4_64     = (12,15)
	var4_65     = (12,15)
	var4_66     = (12,15)
	var4_67     = (12,15)
	var4_68     = (12,15)
	var4_69     = (12,15)
	var4_70     = (12,15)
	var4_71     = (12,15)
	var4_72     = (12,15)
	var4_73     = (12,15)
	var4_74     = (12,15)
	var4_75     = (12,15)
	var4_76     = (12,15)
	var4_77     = (12,15)
	var4_78     = (12,15)
	var4_79     = (12,15)
	var4_80     = (12,15)
	var4_81     = (12,15)
	var4_82     = (12,15)
	var4_83     = (12,15)
	var4_84     = (12,15)
	mvar_1     = (9,11)
	mvar_2     = (9,11)
	mvar_3     = (9,11)
	mvar_4     = (9,11)
	mvar_5     = (9,11)
	mvar_6     = (9,11)
	mvar_7     = (9,11)
	mvar_8     = (9,11)
	mvar_9     = (9,11)
	mvar_10     = (9,11)
	mvar_11     = (9,11)
	mvar_12     = (9,11)
	mvar_13     = (9,11)
	mvar_14     = (9,11)
	mvar_15     = (9,11)
	mvar_16     = (9,11)
	mvar_17     = (9,11)
	mvar_18     = (9,11)
	mvar_19     = (9,11)
	mvar_20     = (9,11)
	mvar_21     = (9,11)
	mvar_22     = (9,11)
	mvar_23     = (9,11)
	mvar_24     = (9,11)
	mvar_25     = (9,11)
	mvar_26     = (9,11)
	mvar_27     = (9,11)
	mvar_28     = (9,11)
	mvar_29     = (9,11)
	mvar_30     = (9,11)
	mvar_31     = (9,11)
	mvar_32     = (9,11)
	mvar_33     = (9,11)
	mvar_34     = (9,11)
	mvar_35     = (9,11)
	mvar_36     = (9,11)
	mvar_37     = (9,11)
	mvar_38     = (9,11)
	mvar_39     = (9,11)
	mvar_40     = (9,11)
	mvar_41     = (9,11)
	mvar_42     = (9,11)
	mvar_43     = (9,11)
	mvar_44     = (9,11)
	mvar_45     = (9,11)
	mvar_46     = (9,11)
	mvar_47     = (9,11)
	mvar_48     = (9,11)
	mvar_49     = (9,11)
	mvar_50     = (9,11)
	mvar_51     = (9,11)
	mvar_52     = (9,11)
	mvar_53     = (9,11)
	mvar_54     = (9,11)
	mvar_55     = (9,11)
	mvar_56     = (9,11)
	mvar_57     = (9,11)
	mvar_58     = (9,11)
	mvar_59     = (9,11)
	mvar_60     = (9,11)
	mvar_61     = (9,11)
	mvar_62     = (9,11)
	mvar_63     = (9,11)
	mvar_64     = (9,11)
	mvar_65     = (9,11)
	mvar_66     = (9,11)
	mvar_67     = (9,11)
	mvar_68     = (9,11)
	mvar_69     = (9,11)
	mvar_70     = (9,11)
	mvar_71     = (9,11)
	mvar_72     = (9,11)
	mvar_73     = (9,11)
	mvar_74     = (9,11)
	mvar_75     = (9,11)
	mvar_76     = (9,11)
	mvar_77     = (9,11)
	mvar_78     = (9,11)
	mvar_79     = (9,11)
	mvar_80     = (9,11)
	mvar_81     = (9,11)
	mvar_82     = (9,11)
	mvar_83     = (9,11)
	mvar_84     = (9,11)
	idx9_1     = (0,8)
	idx9_2     = (0,8)
	idx9_3     = (0,8)
	idx9_4     = (0,8)
	idx9_5     = (0,8)
	idx9_6     = (0,8)
	idx9_7     = (0,8)
	idx9_8     = (0,8)
	idx9_9     = (0,8)
	idx9_10     = (0,8)
	idx9_11     = (0,8)
	idx9_12     = (0,8)
	idx9_13     = (0,8)
	idx9_14     = (0,8)
	idx9_15     = (0,8)
	idx9_16     = (0,8)
	idx9_17     = (0,8)
	idx9_18     = (0,8)
	idx9_19     = (0,8)
	idx9_20     = (0,8)
	idx9_21     = (0,8)
	idx9_22     = (0,8)
	idx9_23     = (0,8)
	idx9_24     = (0,8)
	idx9_25     = (0,8)
	idx9_26     = (0,8)
	idx9_27     = (0,8)
	idx9_28     = (0,8)
	idx9_29     = (0,8)
	idx9_30     = (0,8)
	idx9_31     = (0,8)
	idx9_32     = (0,8)
	idx9_33     = (0,8)
	idx9_34     = (0,8)
	idx9_35     = (0,8)
	idx9_36     = (0,8)
	idx9_37     = (0,8)
	idx9_38     = (0,8)
	idx9_39     = (0,8)
	idx9_40     = (0,8)
	idx9_41     = (0,8)
	idx9_42     = (0,8)
	idx9_43     = (0,8)
	idx9_44     = (0,8)
	idx9_45     = (0,8)
	idx9_46     = (0,8)
	idx9_47     = (0,8)
	idx9_48     = (0,8)
	idx9_49     = (0,8)
	idx9_50     = (0,8)
	idx9_51     = (0,8)
	idx9_52     = (0,8)
	idx9_53     = (0,8)
	idx9_54     = (0,8)
	idx9_55     = (0,8)
	idx9_56     = (0,8)
	idx9_57     = (0,8)
	idx9_58     = (0,8)
	idx9_59     = (0,8)
	idx9_60     = (0,8)
	idx9_61     = (0,8)
	idx9_62     = (0,8)
	idx9_63     = (0,8)
	idx9_64     = (0,8)
	idx9_65     = (0,8)
	idx9_66     = (0,8)
	idx9_67     = (0,8)
	idx9_68     = (0,8)
	idx9_69     = (0,8)
	idx9_70     = (0,8)
	idx9_71     = (0,8)
	idx9_72     = (0,8)
	idx9_73     = (0,8)
	idx9_74     = (0,8)
	idx9_75     = (0,8)
	idx9_76     = (0,8)
	idx9_77     = (0,8)
	idx9_78     = (0,8)
	idx9_79     = (0,8)
	idx9_80     = (0,8)
	idx9_81     = (0,8)
	idx9_82     = (0,8)
	idx9_83     = (0,8)
	idx9_84     = (0,8)
	imm16_1    = (0,15)
	imm16_2    = (0,15)
	imm16_3    = (0,15)
	imm16_4    = (0,15)
	imm16_5    = (0,15)
	imm16_6    = (0,15)
	imm16_7    = (0,15)
	imm16_8    = (0,15)
	imm16_9    = (0,15)
	imm16_10    = (0,15)
	imm16_11    = (0,15)
	imm16_12    = (0,15)
	imm16_13    = (0,15)
	imm16_14    = (0,15)
	imm16_15    = (0,15)
	imm16_16    = (0,15)
	imm16_17    = (0,15)
	imm16_18    = (0,15)
	imm16_19    = (0,15)
	imm16_20    = (0,15)
	imm16_21    = (0,15)
	imm16_22    = (0,15)
	imm16_23    = (0,15)
	imm16_24    = (0,15)
	imm16_25    = (0,15)
	imm16_26    = (0,15)
	imm16_27    = (0,15)
	imm16_28    = (0,15)
	imm16_29    = (0,15)
	imm16_30    = (0,15)
	imm16_31    = (0,15)
	imm16_32    = (0,15)
	imm16_33    = (0,15)
	imm16_34    = (0,15)
	imm16_35    = (0,15)
	imm16_36    = (0,15)
	imm16_37    = (0,15)
	imm16_38    = (0,15)
	imm16_39    = (0,15)
	imm16_40    = (0,15)
	imm16_41    = (0,15)
	imm16_42    = (0,15)
	imm16_43    = (0,15)
	imm16_44    = (0,15)
	imm16_45    = (0,15)
	imm16_46    = (0,15)
	imm16_47    = (0,15)
	imm16_48    = (0,15)
	imm16_49    = (0,15)
	imm16_50    = (0,15)
	imm16_51    = (0,15)
	imm16_52    = (0,15)
	imm16_53    = (0,15)
	imm16_54    = (0,15)
	imm16_55    = (0,15)
	imm16_56    = (0,15)
	imm16_57    = (0,15)
	imm16_58    = (0,15)
	imm16_59    = (0,15)
	imm16_60    = (0,15)
	imm16_61    = (0,15)
	imm16_62    = (0,15)
	imm16_63    = (0,15)
	imm16_64    = (0,15)
	imm16_65    = (0,15)
	imm16_66    = (0,15)
	imm16_67    = (0,15)
	imm16_68    = (0,15)
	imm16_69    = (0,15)
	imm16_70    = (0,15)
	imm16_71    = (0,15)
	imm16_72    = (0,15)
	imm16_73    = (0,15)
	imm16_74    = (0,15)
	imm16_75    = (0,15)
	imm16_76    = (0,15)
	imm16_77    = (0,15)
	imm16_78    = (0,15)
	imm16_79    = (0,15)
	imm16_80    = (0,15)
	imm16_81    = (0,15)
	imm16_82    = (0,15)
	imm16_83    = (0,15)
	imm16_84    = (0,15)
;

define token jmpidx (16)
	jmp_idx    = (8,15)
	jmp_off    = (0,7)
	jmp_full   = (0,15)
;

define token fulladdr (32)
	addr_1       = (0, 31)
;

Val1: imm16_1 is imm16_1 { c:2 = imm16_1; export c; }
Val2: imm16_2 is imm16_2 { c:2 = imm16_2; export c; }
Val3: imm16_3 is imm16_3 { c:2 = imm16_3; export c; }
Val4: imm16_4 is imm16_4 { c:2 = imm16_4; export c; }
Val5: imm16_5 is imm16_5 { c:2 = imm16_5; export c; }
Val6: imm16_6 is imm16_6 { c:2 = imm16_6; export c; }
Val7: imm16_7 is imm16_7 { c:2 = imm16_7; export c; }
Val8: imm16_8 is imm16_8 { c:2 = imm16_8; export c; }
Val9: imm16_9 is imm16_9 { c:2 = imm16_9; export c; }
Val10: imm16_10 is imm16_10 { c:2 = imm16_10; export c; }
Val11: imm16_11 is imm16_11 { c:2 = imm16_11; export c; }
Val12: imm16_12 is imm16_12 { c:2 = imm16_12; export c; }
Val13: imm16_13 is imm16_13 { c:2 = imm16_13; export c; }
Val14: imm16_14 is imm16_14 { c:2 = imm16_14; export c; }
Val15: imm16_15 is imm16_15 { c:2 = imm16_15; export c; }
Val16: imm16_16 is imm16_16 { c:2 = imm16_16; export c; }
Val17: imm16_17 is imm16_17 { c:2 = imm16_17; export c; }
Val18: imm16_18 is imm16_18 { c:2 = imm16_18; export c; }
Val19: imm16_19 is imm16_19 { c:2 = imm16_19; export c; }
Val20: imm16_20 is imm16_20 { c:2 = imm16_20; export c; }
Val21: imm16_21 is imm16_21 { c:2 = imm16_21; export c; }
Val22: imm16_22 is imm16_22 { c:2 = imm16_22; export c; }
Val23: imm16_23 is imm16_23 { c:2 = imm16_23; export c; }
Val24: imm16_24 is imm16_24 { c:2 = imm16_24; export c; }
Val25: imm16_25 is imm16_25 { c:2 = imm16_25; export c; }
Val26: imm16_26 is imm16_26 { c:2 = imm16_26; export c; }
Val27: imm16_27 is imm16_27 { c:2 = imm16_27; export c; }
Val28: imm16_28 is imm16_28 { c:2 = imm16_28; export c; }
Val29: imm16_29 is imm16_29 { c:2 = imm16_29; export c; }
Val30: imm16_30 is imm16_30 { c:2 = imm16_30; export c; }
Val31: imm16_31 is imm16_31 { c:2 = imm16_31; export c; }
Val32: imm16_32 is imm16_32 { c:2 = imm16_32; export c; }
Val33: imm16_33 is imm16_33 { c:2 = imm16_33; export c; }
Val34: imm16_34 is imm16_34 { c:2 = imm16_34; export c; }
Val35: imm16_35 is imm16_35 { c:2 = imm16_35; export c; }
Val36: imm16_36 is imm16_36 { c:2 = imm16_36; export c; }
Val37: imm16_37 is imm16_37 { c:2 = imm16_37; export c; }
Val38: imm16_38 is imm16_38 { c:2 = imm16_38; export c; }
Val39: imm16_39 is imm16_39 { c:2 = imm16_39; export c; }
Val40: imm16_40 is imm16_40 { c:2 = imm16_40; export c; }
Val41: imm16_41 is imm16_41 { c:2 = imm16_41; export c; }
Val42: imm16_42 is imm16_42 { c:2 = imm16_42; export c; }
Val43: imm16_43 is imm16_43 { c:2 = imm16_43; export c; }
Val44: imm16_44 is imm16_44 { c:2 = imm16_44; export c; }
Val45: imm16_45 is imm16_45 { c:2 = imm16_45; export c; }
Val46: imm16_46 is imm16_46 { c:2 = imm16_46; export c; }
Val47: imm16_47 is imm16_47 { c:2 = imm16_47; export c; }
Val48: imm16_48 is imm16_48 { c:2 = imm16_48; export c; }
Val49: imm16_49 is imm16_49 { c:2 = imm16_49; export c; }
Val50: imm16_50 is imm16_50 { c:2 = imm16_50; export c; }
Val51: imm16_51 is imm16_51 { c:2 = imm16_51; export c; }
Val52: imm16_52 is imm16_52 { c:2 = imm16_52; export c; }
Val53: imm16_53 is imm16_53 { c:2 = imm16_53; export c; }
Val54: imm16_54 is imm16_54 { c:2 = imm16_54; export c; }
Val55: imm16_55 is imm16_55 { c:2 = imm16_55; export c; }
Val56: imm16_56 is imm16_56 { c:2 = imm16_56; export c; }
Val57: imm16_57 is imm16_57 { c:2 = imm16_57; export c; }
Val58: imm16_58 is imm16_58 { c:2 = imm16_58; export c; }
Val59: imm16_59 is imm16_59 { c:2 = imm16_59; export c; }
Val60: imm16_60 is imm16_60 { c:2 = imm16_60; export c; }
Val61: imm16_61 is imm16_61 { c:2 = imm16_61; export c; }
Val62: imm16_62 is imm16_62 { c:2 = imm16_62; export c; }
Val63: imm16_63 is imm16_63 { c:2 = imm16_63; export c; }
Val64: imm16_64 is imm16_64 { c:2 = imm16_64; export c; }
Val65: imm16_65 is imm16_65 { c:2 = imm16_65; export c; }
Val66: imm16_66 is imm16_66 { c:2 = imm16_66; export c; }
Val67: imm16_67 is imm16_67 { c:2 = imm16_67; export c; }
Val68: imm16_68 is imm16_68 { c:2 = imm16_68; export c; }
Val69: imm16_69 is imm16_69 { c:2 = imm16_69; export c; }
Val70: imm16_70 is imm16_70 { c:2 = imm16_70; export c; }
Val71: imm16_71 is imm16_71 { c:2 = imm16_71; export c; }
Val72: imm16_72 is imm16_72 { c:2 = imm16_72; export c; }
Val73: imm16_73 is imm16_73 { c:2 = imm16_73; export c; }
Val74: imm16_74 is imm16_74 { c:2 = imm16_74; export c; }
Val75: imm16_75 is imm16_75 { c:2 = imm16_75; export c; }
Val76: imm16_76 is imm16_76 { c:2 = imm16_76; export c; }
Val77: imm16_77 is imm16_77 { c:2 = imm16_77; export c; }
Val78: imm16_78 is imm16_78 { c:2 = imm16_78; export c; }
Val79: imm16_79 is imm16_79 { c:2 = imm16_79; export c; }
Val80: imm16_80 is imm16_80 { c:2 = imm16_80; export c; }
Val81: imm16_81 is imm16_81 { c:2 = imm16_81; export c; }
Val82: imm16_82 is imm16_82 { c:2 = imm16_82; export c; }
Val83: imm16_83 is imm16_83 { c:2 = imm16_83; export c; }
Val84: imm16_84 is imm16_84 { c:2 = imm16_84; export c; }



Var: (loc) is var4_1=0xC & mvar_1=0 & idx9_1 [ loc = 0x0100C000 + idx9_1*2; ] { export *:2 loc; }
Var: (loc) is var4_1=0xD & mvar_1=0 & idx9_1 [ loc = 0x0100D000 + idx9_1*2; ] { export *:2 loc; }
Var: (loc) is var4_1=0xE & mvar_1=0 & idx9_1 [ loc = 0x0100E000 + idx9_1*2; ] { export *:2 loc; }
Var: (loc) is var4_1=0xF & mvar_1=0 & idx9_1 [ loc = 0x0100F000 + idx9_1*2; ] { export *:2 loc; }
Var: (loc) is var4_1=0x0 & mvar_1=0 & idx9_1 [ loc = 0x0100D000 + idx9_1*2; ] { export *:2 loc; }


VarOrVal1: (loc) is var4_1=0xC & mvar_1=0 & idx9_1 [ loc = 0x0100C000 + idx9_1*2; ] { export *:2 loc; }
VarOrVal2: (loc) is var4_2=0xC & mvar_2=0 & idx9_2 [ loc = 0x0100C000 + idx9_2*2; ] { export *:2 loc; }
VarOrVal3: (loc) is var4_3=0xC & mvar_3=0 & idx9_3 [ loc = 0x0100C000 + idx9_3*2; ] { export *:2 loc; }
VarOrVal4: (loc) is var4_4=0xC & mvar_4=0 & idx9_4 [ loc = 0x0100C000 + idx9_4*2; ] { export *:2 loc; }
VarOrVal5: (loc) is var4_5=0xC & mvar_5=0 & idx9_5 [ loc = 0x0100C000 + idx9_5*2; ] { export *:2 loc; }
VarOrVal6: (loc) is var4_6=0xC & mvar_6=0 & idx9_6 [ loc = 0x0100C000 + idx9_6*2; ] { export *:2 loc; }
VarOrVal7: (loc) is var4_7=0xC & mvar_7=0 & idx9_7 [ loc = 0x0100C000 + idx9_7*2; ] { export *:2 loc; }
VarOrVal8: (loc) is var4_8=0xC & mvar_8=0 & idx9_8 [ loc = 0x0100C000 + idx9_8*2; ] { export *:2 loc; }
VarOrVal9: (loc) is var4_9=0xC & mvar_9=0 & idx9_9 [ loc = 0x0100C000 + idx9_9*2; ] { export *:2 loc; }
VarOrVal10: (loc) is var4_10=0xC & mvar_10=0 & idx9_10 [ loc = 0x0100C000 + idx9_10*2; ] { export *:2 loc; }
VarOrVal11: (loc) is var4_11=0xC & mvar_11=0 & idx9_11 [ loc = 0x0100C000 + idx9_11*2; ] { export *:2 loc; }
VarOrVal12: (loc) is var4_12=0xC & mvar_12=0 & idx9_12 [ loc = 0x0100C000 + idx9_12*2; ] { export *:2 loc; }
VarOrVal13: (loc) is var4_13=0xC & mvar_13=0 & idx9_13 [ loc = 0x0100C000 + idx9_13*2; ] { export *:2 loc; }
VarOrVal14: (loc) is var4_14=0xC & mvar_14=0 & idx9_14 [ loc = 0x0100C000 + idx9_14*2; ] { export *:2 loc; }
VarOrVal15: (loc) is var4_15=0xC & mvar_15=0 & idx9_15 [ loc = 0x0100C000 + idx9_15*2; ] { export *:2 loc; }
VarOrVal16: (loc) is var4_16=0xC & mvar_16=0 & idx9_16 [ loc = 0x0100C000 + idx9_16*2; ] { export *:2 loc; }
VarOrVal17: (loc) is var4_17=0xC & mvar_17=0 & idx9_17 [ loc = 0x0100C000 + idx9_17*2; ] { export *:2 loc; }
VarOrVal18: (loc) is var4_18=0xC & mvar_18=0 & idx9_18 [ loc = 0x0100C000 + idx9_18*2; ] { export *:2 loc; }
VarOrVal19: (loc) is var4_19=0xC & mvar_19=0 & idx9_19 [ loc = 0x0100C000 + idx9_19*2; ] { export *:2 loc; }
VarOrVal20: (loc) is var4_20=0xC & mvar_20=0 & idx9_20 [ loc = 0x0100C000 + idx9_20*2; ] { export *:2 loc; }
VarOrVal21: (loc) is var4_21=0xC & mvar_21=0 & idx9_21 [ loc = 0x0100C000 + idx9_21*2; ] { export *:2 loc; }
VarOrVal22: (loc) is var4_22=0xC & mvar_22=0 & idx9_22 [ loc = 0x0100C000 + idx9_22*2; ] { export *:2 loc; }
VarOrVal23: (loc) is var4_23=0xC & mvar_23=0 & idx9_23 [ loc = 0x0100C000 + idx9_23*2; ] { export *:2 loc; }
VarOrVal24: (loc) is var4_24=0xC & mvar_24=0 & idx9_24 [ loc = 0x0100C000 + idx9_24*2; ] { export *:2 loc; }
VarOrVal25: (loc) is var4_25=0xC & mvar_25=0 & idx9_25 [ loc = 0x0100C000 + idx9_25*2; ] { export *:2 loc; }
VarOrVal26: (loc) is var4_26=0xC & mvar_26=0 & idx9_26 [ loc = 0x0100C000 + idx9_26*2; ] { export *:2 loc; }
VarOrVal27: (loc) is var4_27=0xC & mvar_27=0 & idx9_27 [ loc = 0x0100C000 + idx9_27*2; ] { export *:2 loc; }
VarOrVal28: (loc) is var4_28=0xC & mvar_28=0 & idx9_28 [ loc = 0x0100C000 + idx9_28*2; ] { export *:2 loc; }
VarOrVal29: (loc) is var4_29=0xC & mvar_29=0 & idx9_29 [ loc = 0x0100C000 + idx9_29*2; ] { export *:2 loc; }
VarOrVal30: (loc) is var4_30=0xC & mvar_30=0 & idx9_30 [ loc = 0x0100C000 + idx9_30*2; ] { export *:2 loc; }
VarOrVal31: (loc) is var4_31=0xC & mvar_31=0 & idx9_31 [ loc = 0x0100C000 + idx9_31*2; ] { export *:2 loc; }
VarOrVal32: (loc) is var4_32=0xC & mvar_32=0 & idx9_32 [ loc = 0x0100C000 + idx9_32*2; ] { export *:2 loc; }
VarOrVal33: (loc) is var4_33=0xC & mvar_33=0 & idx9_33 [ loc = 0x0100C000 + idx9_33*2; ] { export *:2 loc; }
VarOrVal34: (loc) is var4_34=0xC & mvar_34=0 & idx9_34 [ loc = 0x0100C000 + idx9_34*2; ] { export *:2 loc; }
VarOrVal35: (loc) is var4_35=0xC & mvar_35=0 & idx9_35 [ loc = 0x0100C000 + idx9_35*2; ] { export *:2 loc; }
VarOrVal36: (loc) is var4_36=0xC & mvar_36=0 & idx9_36 [ loc = 0x0100C000 + idx9_36*2; ] { export *:2 loc; }
VarOrVal37: (loc) is var4_37=0xC & mvar_37=0 & idx9_37 [ loc = 0x0100C000 + idx9_37*2; ] { export *:2 loc; }
VarOrVal38: (loc) is var4_38=0xC & mvar_38=0 & idx9_38 [ loc = 0x0100C000 + idx9_38*2; ] { export *:2 loc; }
VarOrVal39: (loc) is var4_39=0xC & mvar_39=0 & idx9_39 [ loc = 0x0100C000 + idx9_39*2; ] { export *:2 loc; }
VarOrVal40: (loc) is var4_40=0xC & mvar_40=0 & idx9_40 [ loc = 0x0100C000 + idx9_40*2; ] { export *:2 loc; }
VarOrVal41: (loc) is var4_41=0xC & mvar_41=0 & idx9_41 [ loc = 0x0100C000 + idx9_41*2; ] { export *:2 loc; }
VarOrVal42: (loc) is var4_42=0xC & mvar_42=0 & idx9_42 [ loc = 0x0100C000 + idx9_42*2; ] { export *:2 loc; }
VarOrVal43: (loc) is var4_43=0xC & mvar_43=0 & idx9_43 [ loc = 0x0100C000 + idx9_43*2; ] { export *:2 loc; }
VarOrVal44: (loc) is var4_44=0xC & mvar_44=0 & idx9_44 [ loc = 0x0100C000 + idx9_44*2; ] { export *:2 loc; }
VarOrVal45: (loc) is var4_45=0xC & mvar_45=0 & idx9_45 [ loc = 0x0100C000 + idx9_45*2; ] { export *:2 loc; }
VarOrVal46: (loc) is var4_46=0xC & mvar_46=0 & idx9_46 [ loc = 0x0100C000 + idx9_46*2; ] { export *:2 loc; }
VarOrVal47: (loc) is var4_47=0xC & mvar_47=0 & idx9_47 [ loc = 0x0100C000 + idx9_47*2; ] { export *:2 loc; }
VarOrVal48: (loc) is var4_48=0xC & mvar_48=0 & idx9_48 [ loc = 0x0100C000 + idx9_48*2; ] { export *:2 loc; }
VarOrVal49: (loc) is var4_49=0xC & mvar_49=0 & idx9_49 [ loc = 0x0100C000 + idx9_49*2; ] { export *:2 loc; }
VarOrVal50: (loc) is var4_50=0xC & mvar_50=0 & idx9_50 [ loc = 0x0100C000 + idx9_50*2; ] { export *:2 loc; }
VarOrVal51: (loc) is var4_51=0xC & mvar_51=0 & idx9_51 [ loc = 0x0100C000 + idx9_51*2; ] { export *:2 loc; }
VarOrVal52: (loc) is var4_52=0xC & mvar_52=0 & idx9_52 [ loc = 0x0100C000 + idx9_52*2; ] { export *:2 loc; }
VarOrVal53: (loc) is var4_53=0xC & mvar_53=0 & idx9_53 [ loc = 0x0100C000 + idx9_53*2; ] { export *:2 loc; }
VarOrVal54: (loc) is var4_54=0xC & mvar_54=0 & idx9_54 [ loc = 0x0100C000 + idx9_54*2; ] { export *:2 loc; }
VarOrVal55: (loc) is var4_55=0xC & mvar_55=0 & idx9_55 [ loc = 0x0100C000 + idx9_55*2; ] { export *:2 loc; }
VarOrVal56: (loc) is var4_56=0xC & mvar_56=0 & idx9_56 [ loc = 0x0100C000 + idx9_56*2; ] { export *:2 loc; }
VarOrVal57: (loc) is var4_57=0xC & mvar_57=0 & idx9_57 [ loc = 0x0100C000 + idx9_57*2; ] { export *:2 loc; }
VarOrVal58: (loc) is var4_58=0xC & mvar_58=0 & idx9_58 [ loc = 0x0100C000 + idx9_58*2; ] { export *:2 loc; }
VarOrVal59: (loc) is var4_59=0xC & mvar_59=0 & idx9_59 [ loc = 0x0100C000 + idx9_59*2; ] { export *:2 loc; }
VarOrVal60: (loc) is var4_60=0xC & mvar_60=0 & idx9_60 [ loc = 0x0100C000 + idx9_60*2; ] { export *:2 loc; }
VarOrVal61: (loc) is var4_61=0xC & mvar_61=0 & idx9_61 [ loc = 0x0100C000 + idx9_61*2; ] { export *:2 loc; }
VarOrVal62: (loc) is var4_62=0xC & mvar_62=0 & idx9_62 [ loc = 0x0100C000 + idx9_62*2; ] { export *:2 loc; }
VarOrVal63: (loc) is var4_63=0xC & mvar_63=0 & idx9_63 [ loc = 0x0100C000 + idx9_63*2; ] { export *:2 loc; }
VarOrVal64: (loc) is var4_64=0xC & mvar_64=0 & idx9_64 [ loc = 0x0100C000 + idx9_64*2; ] { export *:2 loc; }
VarOrVal65: (loc) is var4_65=0xC & mvar_65=0 & idx9_65 [ loc = 0x0100C000 + idx9_65*2; ] { export *:2 loc; }
VarOrVal66: (loc) is var4_66=0xC & mvar_66=0 & idx9_66 [ loc = 0x0100C000 + idx9_66*2; ] { export *:2 loc; }
VarOrVal67: (loc) is var4_67=0xC & mvar_67=0 & idx9_67 [ loc = 0x0100C000 + idx9_67*2; ] { export *:2 loc; }
VarOrVal68: (loc) is var4_68=0xC & mvar_68=0 & idx9_68 [ loc = 0x0100C000 + idx9_68*2; ] { export *:2 loc; }
VarOrVal69: (loc) is var4_69=0xC & mvar_69=0 & idx9_69 [ loc = 0x0100C000 + idx9_69*2; ] { export *:2 loc; }
VarOrVal70: (loc) is var4_70=0xC & mvar_70=0 & idx9_70 [ loc = 0x0100C000 + idx9_70*2; ] { export *:2 loc; }
VarOrVal71: (loc) is var4_71=0xC & mvar_71=0 & idx9_71 [ loc = 0x0100C000 + idx9_71*2; ] { export *:2 loc; }
VarOrVal72: (loc) is var4_72=0xC & mvar_72=0 & idx9_72 [ loc = 0x0100C000 + idx9_72*2; ] { export *:2 loc; }
VarOrVal73: (loc) is var4_73=0xC & mvar_73=0 & idx9_73 [ loc = 0x0100C000 + idx9_73*2; ] { export *:2 loc; }
VarOrVal74: (loc) is var4_74=0xC & mvar_74=0 & idx9_74 [ loc = 0x0100C000 + idx9_74*2; ] { export *:2 loc; }
VarOrVal75: (loc) is var4_75=0xC & mvar_75=0 & idx9_75 [ loc = 0x0100C000 + idx9_75*2; ] { export *:2 loc; }
VarOrVal76: (loc) is var4_76=0xC & mvar_76=0 & idx9_76 [ loc = 0x0100C000 + idx9_76*2; ] { export *:2 loc; }
VarOrVal77: (loc) is var4_77=0xC & mvar_77=0 & idx9_77 [ loc = 0x0100C000 + idx9_77*2; ] { export *:2 loc; }
VarOrVal78: (loc) is var4_78=0xC & mvar_78=0 & idx9_78 [ loc = 0x0100C000 + idx9_78*2; ] { export *:2 loc; }
VarOrVal79: (loc) is var4_79=0xC & mvar_79=0 & idx9_79 [ loc = 0x0100C000 + idx9_79*2; ] { export *:2 loc; }
VarOrVal80: (loc) is var4_80=0xC & mvar_80=0 & idx9_80 [ loc = 0x0100C000 + idx9_80*2; ] { export *:2 loc; }
VarOrVal81: (loc) is var4_81=0xC & mvar_81=0 & idx9_81 [ loc = 0x0100C000 + idx9_81*2; ] { export *:2 loc; }
VarOrVal82: (loc) is var4_82=0xC & mvar_82=0 & idx9_82 [ loc = 0x0100C000 + idx9_82*2; ] { export *:2 loc; }
VarOrVal83: (loc) is var4_83=0xC & mvar_83=0 & idx9_83 [ loc = 0x0100C000 + idx9_83*2; ] { export *:2 loc; }
VarOrVal84: (loc) is var4_84=0xC & mvar_84=0 & idx9_84 [ loc = 0x0100C000 + idx9_84*2; ] { export *:2 loc; }
VarOrVal1: (loc) is var4_1=0xD & mvar_1=0 & idx9_1 [ loc = 0x0100D000 + idx9_1*2; ] { export *:2 loc; }
VarOrVal2: (loc) is var4_2=0xD & mvar_2=0 & idx9_2 [ loc = 0x0100D000 + idx9_2*2; ] { export *:2 loc; }
VarOrVal3: (loc) is var4_3=0xD & mvar_3=0 & idx9_3 [ loc = 0x0100D000 + idx9_3*2; ] { export *:2 loc; }
VarOrVal4: (loc) is var4_4=0xD & mvar_4=0 & idx9_4 [ loc = 0x0100D000 + idx9_4*2; ] { export *:2 loc; }
VarOrVal5: (loc) is var4_5=0xD & mvar_5=0 & idx9_5 [ loc = 0x0100D000 + idx9_5*2; ] { export *:2 loc; }
VarOrVal6: (loc) is var4_6=0xD & mvar_6=0 & idx9_6 [ loc = 0x0100D000 + idx9_6*2; ] { export *:2 loc; }
VarOrVal7: (loc) is var4_7=0xD & mvar_7=0 & idx9_7 [ loc = 0x0100D000 + idx9_7*2; ] { export *:2 loc; }
VarOrVal8: (loc) is var4_8=0xD & mvar_8=0 & idx9_8 [ loc = 0x0100D000 + idx9_8*2; ] { export *:2 loc; }
VarOrVal9: (loc) is var4_9=0xD & mvar_9=0 & idx9_9 [ loc = 0x0100D000 + idx9_9*2; ] { export *:2 loc; }
VarOrVal10: (loc) is var4_10=0xD & mvar_10=0 & idx9_10 [ loc = 0x0100D000 + idx9_10*2; ] { export *:2 loc; }
VarOrVal11: (loc) is var4_11=0xD & mvar_11=0 & idx9_11 [ loc = 0x0100D000 + idx9_11*2; ] { export *:2 loc; }
VarOrVal12: (loc) is var4_12=0xD & mvar_12=0 & idx9_12 [ loc = 0x0100D000 + idx9_12*2; ] { export *:2 loc; }
VarOrVal13: (loc) is var4_13=0xD & mvar_13=0 & idx9_13 [ loc = 0x0100D000 + idx9_13*2; ] { export *:2 loc; }
VarOrVal14: (loc) is var4_14=0xD & mvar_14=0 & idx9_14 [ loc = 0x0100D000 + idx9_14*2; ] { export *:2 loc; }
VarOrVal15: (loc) is var4_15=0xD & mvar_15=0 & idx9_15 [ loc = 0x0100D000 + idx9_15*2; ] { export *:2 loc; }
VarOrVal16: (loc) is var4_16=0xD & mvar_16=0 & idx9_16 [ loc = 0x0100D000 + idx9_16*2; ] { export *:2 loc; }
VarOrVal17: (loc) is var4_17=0xD & mvar_17=0 & idx9_17 [ loc = 0x0100D000 + idx9_17*2; ] { export *:2 loc; }
VarOrVal18: (loc) is var4_18=0xD & mvar_18=0 & idx9_18 [ loc = 0x0100D000 + idx9_18*2; ] { export *:2 loc; }
VarOrVal19: (loc) is var4_19=0xD & mvar_19=0 & idx9_19 [ loc = 0x0100D000 + idx9_19*2; ] { export *:2 loc; }
VarOrVal20: (loc) is var4_20=0xD & mvar_20=0 & idx9_20 [ loc = 0x0100D000 + idx9_20*2; ] { export *:2 loc; }
VarOrVal21: (loc) is var4_21=0xD & mvar_21=0 & idx9_21 [ loc = 0x0100D000 + idx9_21*2; ] { export *:2 loc; }
VarOrVal22: (loc) is var4_22=0xD & mvar_22=0 & idx9_22 [ loc = 0x0100D000 + idx9_22*2; ] { export *:2 loc; }
VarOrVal23: (loc) is var4_23=0xD & mvar_23=0 & idx9_23 [ loc = 0x0100D000 + idx9_23*2; ] { export *:2 loc; }
VarOrVal24: (loc) is var4_24=0xD & mvar_24=0 & idx9_24 [ loc = 0x0100D000 + idx9_24*2; ] { export *:2 loc; }
VarOrVal25: (loc) is var4_25=0xD & mvar_25=0 & idx9_25 [ loc = 0x0100D000 + idx9_25*2; ] { export *:2 loc; }
VarOrVal26: (loc) is var4_26=0xD & mvar_26=0 & idx9_26 [ loc = 0x0100D000 + idx9_26*2; ] { export *:2 loc; }
VarOrVal27: (loc) is var4_27=0xD & mvar_27=0 & idx9_27 [ loc = 0x0100D000 + idx9_27*2; ] { export *:2 loc; }
VarOrVal28: (loc) is var4_28=0xD & mvar_28=0 & idx9_28 [ loc = 0x0100D000 + idx9_28*2; ] { export *:2 loc; }
VarOrVal29: (loc) is var4_29=0xD & mvar_29=0 & idx9_29 [ loc = 0x0100D000 + idx9_29*2; ] { export *:2 loc; }
VarOrVal30: (loc) is var4_30=0xD & mvar_30=0 & idx9_30 [ loc = 0x0100D000 + idx9_30*2; ] { export *:2 loc; }
VarOrVal31: (loc) is var4_31=0xD & mvar_31=0 & idx9_31 [ loc = 0x0100D000 + idx9_31*2; ] { export *:2 loc; }
VarOrVal32: (loc) is var4_32=0xD & mvar_32=0 & idx9_32 [ loc = 0x0100D000 + idx9_32*2; ] { export *:2 loc; }
VarOrVal33: (loc) is var4_33=0xD & mvar_33=0 & idx9_33 [ loc = 0x0100D000 + idx9_33*2; ] { export *:2 loc; }
VarOrVal34: (loc) is var4_34=0xD & mvar_34=0 & idx9_34 [ loc = 0x0100D000 + idx9_34*2; ] { export *:2 loc; }
VarOrVal35: (loc) is var4_35=0xD & mvar_35=0 & idx9_35 [ loc = 0x0100D000 + idx9_35*2; ] { export *:2 loc; }
VarOrVal36: (loc) is var4_36=0xD & mvar_36=0 & idx9_36 [ loc = 0x0100D000 + idx9_36*2; ] { export *:2 loc; }
VarOrVal37: (loc) is var4_37=0xD & mvar_37=0 & idx9_37 [ loc = 0x0100D000 + idx9_37*2; ] { export *:2 loc; }
VarOrVal38: (loc) is var4_38=0xD & mvar_38=0 & idx9_38 [ loc = 0x0100D000 + idx9_38*2; ] { export *:2 loc; }
VarOrVal39: (loc) is var4_39=0xD & mvar_39=0 & idx9_39 [ loc = 0x0100D000 + idx9_39*2; ] { export *:2 loc; }
VarOrVal40: (loc) is var4_40=0xD & mvar_40=0 & idx9_40 [ loc = 0x0100D000 + idx9_40*2; ] { export *:2 loc; }
VarOrVal41: (loc) is var4_41=0xD & mvar_41=0 & idx9_41 [ loc = 0x0100D000 + idx9_41*2; ] { export *:2 loc; }
VarOrVal42: (loc) is var4_42=0xD & mvar_42=0 & idx9_42 [ loc = 0x0100D000 + idx9_42*2; ] { export *:2 loc; }
VarOrVal43: (loc) is var4_43=0xD & mvar_43=0 & idx9_43 [ loc = 0x0100D000 + idx9_43*2; ] { export *:2 loc; }
VarOrVal44: (loc) is var4_44=0xD & mvar_44=0 & idx9_44 [ loc = 0x0100D000 + idx9_44*2; ] { export *:2 loc; }
VarOrVal45: (loc) is var4_45=0xD & mvar_45=0 & idx9_45 [ loc = 0x0100D000 + idx9_45*2; ] { export *:2 loc; }
VarOrVal46: (loc) is var4_46=0xD & mvar_46=0 & idx9_46 [ loc = 0x0100D000 + idx9_46*2; ] { export *:2 loc; }
VarOrVal47: (loc) is var4_47=0xD & mvar_47=0 & idx9_47 [ loc = 0x0100D000 + idx9_47*2; ] { export *:2 loc; }
VarOrVal48: (loc) is var4_48=0xD & mvar_48=0 & idx9_48 [ loc = 0x0100D000 + idx9_48*2; ] { export *:2 loc; }
VarOrVal49: (loc) is var4_49=0xD & mvar_49=0 & idx9_49 [ loc = 0x0100D000 + idx9_49*2; ] { export *:2 loc; }
VarOrVal50: (loc) is var4_50=0xD & mvar_50=0 & idx9_50 [ loc = 0x0100D000 + idx9_50*2; ] { export *:2 loc; }
VarOrVal51: (loc) is var4_51=0xD & mvar_51=0 & idx9_51 [ loc = 0x0100D000 + idx9_51*2; ] { export *:2 loc; }
VarOrVal52: (loc) is var4_52=0xD & mvar_52=0 & idx9_52 [ loc = 0x0100D000 + idx9_52*2; ] { export *:2 loc; }
VarOrVal53: (loc) is var4_53=0xD & mvar_53=0 & idx9_53 [ loc = 0x0100D000 + idx9_53*2; ] { export *:2 loc; }
VarOrVal54: (loc) is var4_54=0xD & mvar_54=0 & idx9_54 [ loc = 0x0100D000 + idx9_54*2; ] { export *:2 loc; }
VarOrVal55: (loc) is var4_55=0xD & mvar_55=0 & idx9_55 [ loc = 0x0100D000 + idx9_55*2; ] { export *:2 loc; }
VarOrVal56: (loc) is var4_56=0xD & mvar_56=0 & idx9_56 [ loc = 0x0100D000 + idx9_56*2; ] { export *:2 loc; }
VarOrVal57: (loc) is var4_57=0xD & mvar_57=0 & idx9_57 [ loc = 0x0100D000 + idx9_57*2; ] { export *:2 loc; }
VarOrVal58: (loc) is var4_58=0xD & mvar_58=0 & idx9_58 [ loc = 0x0100D000 + idx9_58*2; ] { export *:2 loc; }
VarOrVal59: (loc) is var4_59=0xD & mvar_59=0 & idx9_59 [ loc = 0x0100D000 + idx9_59*2; ] { export *:2 loc; }
VarOrVal60: (loc) is var4_60=0xD & mvar_60=0 & idx9_60 [ loc = 0x0100D000 + idx9_60*2; ] { export *:2 loc; }
VarOrVal61: (loc) is var4_61=0xD & mvar_61=0 & idx9_61 [ loc = 0x0100D000 + idx9_61*2; ] { export *:2 loc; }
VarOrVal62: (loc) is var4_62=0xD & mvar_62=0 & idx9_62 [ loc = 0x0100D000 + idx9_62*2; ] { export *:2 loc; }
VarOrVal63: (loc) is var4_63=0xD & mvar_63=0 & idx9_63 [ loc = 0x0100D000 + idx9_63*2; ] { export *:2 loc; }
VarOrVal64: (loc) is var4_64=0xD & mvar_64=0 & idx9_64 [ loc = 0x0100D000 + idx9_64*2; ] { export *:2 loc; }
VarOrVal65: (loc) is var4_65=0xD & mvar_65=0 & idx9_65 [ loc = 0x0100D000 + idx9_65*2; ] { export *:2 loc; }
VarOrVal66: (loc) is var4_66=0xD & mvar_66=0 & idx9_66 [ loc = 0x0100D000 + idx9_66*2; ] { export *:2 loc; }
VarOrVal67: (loc) is var4_67=0xD & mvar_67=0 & idx9_67 [ loc = 0x0100D000 + idx9_67*2; ] { export *:2 loc; }
VarOrVal68: (loc) is var4_68=0xD & mvar_68=0 & idx9_68 [ loc = 0x0100D000 + idx9_68*2; ] { export *:2 loc; }
VarOrVal69: (loc) is var4_69=0xD & mvar_69=0 & idx9_69 [ loc = 0x0100D000 + idx9_69*2; ] { export *:2 loc; }
VarOrVal70: (loc) is var4_70=0xD & mvar_70=0 & idx9_70 [ loc = 0x0100D000 + idx9_70*2; ] { export *:2 loc; }
VarOrVal71: (loc) is var4_71=0xD & mvar_71=0 & idx9_71 [ loc = 0x0100D000 + idx9_71*2; ] { export *:2 loc; }
VarOrVal72: (loc) is var4_72=0xD & mvar_72=0 & idx9_72 [ loc = 0x0100D000 + idx9_72*2; ] { export *:2 loc; }
VarOrVal73: (loc) is var4_73=0xD & mvar_73=0 & idx9_73 [ loc = 0x0100D000 + idx9_73*2; ] { export *:2 loc; }
VarOrVal74: (loc) is var4_74=0xD & mvar_74=0 & idx9_74 [ loc = 0x0100D000 + idx9_74*2; ] { export *:2 loc; }
VarOrVal75: (loc) is var4_75=0xD & mvar_75=0 & idx9_75 [ loc = 0x0100D000 + idx9_75*2; ] { export *:2 loc; }
VarOrVal76: (loc) is var4_76=0xD & mvar_76=0 & idx9_76 [ loc = 0x0100D000 + idx9_76*2; ] { export *:2 loc; }
VarOrVal77: (loc) is var4_77=0xD & mvar_77=0 & idx9_77 [ loc = 0x0100D000 + idx9_77*2; ] { export *:2 loc; }
VarOrVal78: (loc) is var4_78=0xD & mvar_78=0 & idx9_78 [ loc = 0x0100D000 + idx9_78*2; ] { export *:2 loc; }
VarOrVal79: (loc) is var4_79=0xD & mvar_79=0 & idx9_79 [ loc = 0x0100D000 + idx9_79*2; ] { export *:2 loc; }
VarOrVal80: (loc) is var4_80=0xD & mvar_80=0 & idx9_80 [ loc = 0x0100D000 + idx9_80*2; ] { export *:2 loc; }
VarOrVal81: (loc) is var4_81=0xD & mvar_81=0 & idx9_81 [ loc = 0x0100D000 + idx9_81*2; ] { export *:2 loc; }
VarOrVal82: (loc) is var4_82=0xD & mvar_82=0 & idx9_82 [ loc = 0x0100D000 + idx9_82*2; ] { export *:2 loc; }
VarOrVal83: (loc) is var4_83=0xD & mvar_83=0 & idx9_83 [ loc = 0x0100D000 + idx9_83*2; ] { export *:2 loc; }
VarOrVal84: (loc) is var4_84=0xD & mvar_84=0 & idx9_84 [ loc = 0x0100D000 + idx9_84*2; ] { export *:2 loc; }
VarOrVal1: (loc) is var4_1=0xE & mvar_1=0 & idx9_1 [ loc = 0x0100E000 + idx9_1*2; ] { export *:2 loc; }
VarOrVal2: (loc) is var4_2=0xE & mvar_2=0 & idx9_2 [ loc = 0x0100E000 + idx9_2*2; ] { export *:2 loc; }
VarOrVal3: (loc) is var4_3=0xE & mvar_3=0 & idx9_3 [ loc = 0x0100E000 + idx9_3*2; ] { export *:2 loc; }
VarOrVal4: (loc) is var4_4=0xE & mvar_4=0 & idx9_4 [ loc = 0x0100E000 + idx9_4*2; ] { export *:2 loc; }
VarOrVal5: (loc) is var4_5=0xE & mvar_5=0 & idx9_5 [ loc = 0x0100E000 + idx9_5*2; ] { export *:2 loc; }
VarOrVal6: (loc) is var4_6=0xE & mvar_6=0 & idx9_6 [ loc = 0x0100E000 + idx9_6*2; ] { export *:2 loc; }
VarOrVal7: (loc) is var4_7=0xE & mvar_7=0 & idx9_7 [ loc = 0x0100E000 + idx9_7*2; ] { export *:2 loc; }
VarOrVal8: (loc) is var4_8=0xE & mvar_8=0 & idx9_8 [ loc = 0x0100E000 + idx9_8*2; ] { export *:2 loc; }
VarOrVal9: (loc) is var4_9=0xE & mvar_9=0 & idx9_9 [ loc = 0x0100E000 + idx9_9*2; ] { export *:2 loc; }
VarOrVal10: (loc) is var4_10=0xE & mvar_10=0 & idx9_10 [ loc = 0x0100E000 + idx9_10*2; ] { export *:2 loc; }
VarOrVal11: (loc) is var4_11=0xE & mvar_11=0 & idx9_11 [ loc = 0x0100E000 + idx9_11*2; ] { export *:2 loc; }
VarOrVal12: (loc) is var4_12=0xE & mvar_12=0 & idx9_12 [ loc = 0x0100E000 + idx9_12*2; ] { export *:2 loc; }
VarOrVal13: (loc) is var4_13=0xE & mvar_13=0 & idx9_13 [ loc = 0x0100E000 + idx9_13*2; ] { export *:2 loc; }
VarOrVal14: (loc) is var4_14=0xE & mvar_14=0 & idx9_14 [ loc = 0x0100E000 + idx9_14*2; ] { export *:2 loc; }
VarOrVal15: (loc) is var4_15=0xE & mvar_15=0 & idx9_15 [ loc = 0x0100E000 + idx9_15*2; ] { export *:2 loc; }
VarOrVal16: (loc) is var4_16=0xE & mvar_16=0 & idx9_16 [ loc = 0x0100E000 + idx9_16*2; ] { export *:2 loc; }
VarOrVal17: (loc) is var4_17=0xE & mvar_17=0 & idx9_17 [ loc = 0x0100E000 + idx9_17*2; ] { export *:2 loc; }
VarOrVal18: (loc) is var4_18=0xE & mvar_18=0 & idx9_18 [ loc = 0x0100E000 + idx9_18*2; ] { export *:2 loc; }
VarOrVal19: (loc) is var4_19=0xE & mvar_19=0 & idx9_19 [ loc = 0x0100E000 + idx9_19*2; ] { export *:2 loc; }
VarOrVal20: (loc) is var4_20=0xE & mvar_20=0 & idx9_20 [ loc = 0x0100E000 + idx9_20*2; ] { export *:2 loc; }
VarOrVal21: (loc) is var4_21=0xE & mvar_21=0 & idx9_21 [ loc = 0x0100E000 + idx9_21*2; ] { export *:2 loc; }
VarOrVal22: (loc) is var4_22=0xE & mvar_22=0 & idx9_22 [ loc = 0x0100E000 + idx9_22*2; ] { export *:2 loc; }
VarOrVal23: (loc) is var4_23=0xE & mvar_23=0 & idx9_23 [ loc = 0x0100E000 + idx9_23*2; ] { export *:2 loc; }
VarOrVal24: (loc) is var4_24=0xE & mvar_24=0 & idx9_24 [ loc = 0x0100E000 + idx9_24*2; ] { export *:2 loc; }
VarOrVal25: (loc) is var4_25=0xE & mvar_25=0 & idx9_25 [ loc = 0x0100E000 + idx9_25*2; ] { export *:2 loc; }
VarOrVal26: (loc) is var4_26=0xE & mvar_26=0 & idx9_26 [ loc = 0x0100E000 + idx9_26*2; ] { export *:2 loc; }
VarOrVal27: (loc) is var4_27=0xE & mvar_27=0 & idx9_27 [ loc = 0x0100E000 + idx9_27*2; ] { export *:2 loc; }
VarOrVal28: (loc) is var4_28=0xE & mvar_28=0 & idx9_28 [ loc = 0x0100E000 + idx9_28*2; ] { export *:2 loc; }
VarOrVal29: (loc) is var4_29=0xE & mvar_29=0 & idx9_29 [ loc = 0x0100E000 + idx9_29*2; ] { export *:2 loc; }
VarOrVal30: (loc) is var4_30=0xE & mvar_30=0 & idx9_30 [ loc = 0x0100E000 + idx9_30*2; ] { export *:2 loc; }
VarOrVal31: (loc) is var4_31=0xE & mvar_31=0 & idx9_31 [ loc = 0x0100E000 + idx9_31*2; ] { export *:2 loc; }
VarOrVal32: (loc) is var4_32=0xE & mvar_32=0 & idx9_32 [ loc = 0x0100E000 + idx9_32*2; ] { export *:2 loc; }
VarOrVal33: (loc) is var4_33=0xE & mvar_33=0 & idx9_33 [ loc = 0x0100E000 + idx9_33*2; ] { export *:2 loc; }
VarOrVal34: (loc) is var4_34=0xE & mvar_34=0 & idx9_34 [ loc = 0x0100E000 + idx9_34*2; ] { export *:2 loc; }
VarOrVal35: (loc) is var4_35=0xE & mvar_35=0 & idx9_35 [ loc = 0x0100E000 + idx9_35*2; ] { export *:2 loc; }
VarOrVal36: (loc) is var4_36=0xE & mvar_36=0 & idx9_36 [ loc = 0x0100E000 + idx9_36*2; ] { export *:2 loc; }
VarOrVal37: (loc) is var4_37=0xE & mvar_37=0 & idx9_37 [ loc = 0x0100E000 + idx9_37*2; ] { export *:2 loc; }
VarOrVal38: (loc) is var4_38=0xE & mvar_38=0 & idx9_38 [ loc = 0x0100E000 + idx9_38*2; ] { export *:2 loc; }
VarOrVal39: (loc) is var4_39=0xE & mvar_39=0 & idx9_39 [ loc = 0x0100E000 + idx9_39*2; ] { export *:2 loc; }
VarOrVal40: (loc) is var4_40=0xE & mvar_40=0 & idx9_40 [ loc = 0x0100E000 + idx9_40*2; ] { export *:2 loc; }
VarOrVal41: (loc) is var4_41=0xE & mvar_41=0 & idx9_41 [ loc = 0x0100E000 + idx9_41*2; ] { export *:2 loc; }
VarOrVal42: (loc) is var4_42=0xE & mvar_42=0 & idx9_42 [ loc = 0x0100E000 + idx9_42*2; ] { export *:2 loc; }
VarOrVal43: (loc) is var4_43=0xE & mvar_43=0 & idx9_43 [ loc = 0x0100E000 + idx9_43*2; ] { export *:2 loc; }
VarOrVal44: (loc) is var4_44=0xE & mvar_44=0 & idx9_44 [ loc = 0x0100E000 + idx9_44*2; ] { export *:2 loc; }
VarOrVal45: (loc) is var4_45=0xE & mvar_45=0 & idx9_45 [ loc = 0x0100E000 + idx9_45*2; ] { export *:2 loc; }
VarOrVal46: (loc) is var4_46=0xE & mvar_46=0 & idx9_46 [ loc = 0x0100E000 + idx9_46*2; ] { export *:2 loc; }
VarOrVal47: (loc) is var4_47=0xE & mvar_47=0 & idx9_47 [ loc = 0x0100E000 + idx9_47*2; ] { export *:2 loc; }
VarOrVal48: (loc) is var4_48=0xE & mvar_48=0 & idx9_48 [ loc = 0x0100E000 + idx9_48*2; ] { export *:2 loc; }
VarOrVal49: (loc) is var4_49=0xE & mvar_49=0 & idx9_49 [ loc = 0x0100E000 + idx9_49*2; ] { export *:2 loc; }
VarOrVal50: (loc) is var4_50=0xE & mvar_50=0 & idx9_50 [ loc = 0x0100E000 + idx9_50*2; ] { export *:2 loc; }
VarOrVal51: (loc) is var4_51=0xE & mvar_51=0 & idx9_51 [ loc = 0x0100E000 + idx9_51*2; ] { export *:2 loc; }
VarOrVal52: (loc) is var4_52=0xE & mvar_52=0 & idx9_52 [ loc = 0x0100E000 + idx9_52*2; ] { export *:2 loc; }
VarOrVal53: (loc) is var4_53=0xE & mvar_53=0 & idx9_53 [ loc = 0x0100E000 + idx9_53*2; ] { export *:2 loc; }
VarOrVal54: (loc) is var4_54=0xE & mvar_54=0 & idx9_54 [ loc = 0x0100E000 + idx9_54*2; ] { export *:2 loc; }
VarOrVal55: (loc) is var4_55=0xE & mvar_55=0 & idx9_55 [ loc = 0x0100E000 + idx9_55*2; ] { export *:2 loc; }
VarOrVal56: (loc) is var4_56=0xE & mvar_56=0 & idx9_56 [ loc = 0x0100E000 + idx9_56*2; ] { export *:2 loc; }
VarOrVal57: (loc) is var4_57=0xE & mvar_57=0 & idx9_57 [ loc = 0x0100E000 + idx9_57*2; ] { export *:2 loc; }
VarOrVal58: (loc) is var4_58=0xE & mvar_58=0 & idx9_58 [ loc = 0x0100E000 + idx9_58*2; ] { export *:2 loc; }
VarOrVal59: (loc) is var4_59=0xE & mvar_59=0 & idx9_59 [ loc = 0x0100E000 + idx9_59*2; ] { export *:2 loc; }
VarOrVal60: (loc) is var4_60=0xE & mvar_60=0 & idx9_60 [ loc = 0x0100E000 + idx9_60*2; ] { export *:2 loc; }
VarOrVal61: (loc) is var4_61=0xE & mvar_61=0 & idx9_61 [ loc = 0x0100E000 + idx9_61*2; ] { export *:2 loc; }
VarOrVal62: (loc) is var4_62=0xE & mvar_62=0 & idx9_62 [ loc = 0x0100E000 + idx9_62*2; ] { export *:2 loc; }
VarOrVal63: (loc) is var4_63=0xE & mvar_63=0 & idx9_63 [ loc = 0x0100E000 + idx9_63*2; ] { export *:2 loc; }
VarOrVal64: (loc) is var4_64=0xE & mvar_64=0 & idx9_64 [ loc = 0x0100E000 + idx9_64*2; ] { export *:2 loc; }
VarOrVal65: (loc) is var4_65=0xE & mvar_65=0 & idx9_65 [ loc = 0x0100E000 + idx9_65*2; ] { export *:2 loc; }
VarOrVal66: (loc) is var4_66=0xE & mvar_66=0 & idx9_66 [ loc = 0x0100E000 + idx9_66*2; ] { export *:2 loc; }
VarOrVal67: (loc) is var4_67=0xE & mvar_67=0 & idx9_67 [ loc = 0x0100E000 + idx9_67*2; ] { export *:2 loc; }
VarOrVal68: (loc) is var4_68=0xE & mvar_68=0 & idx9_68 [ loc = 0x0100E000 + idx9_68*2; ] { export *:2 loc; }
VarOrVal69: (loc) is var4_69=0xE & mvar_69=0 & idx9_69 [ loc = 0x0100E000 + idx9_69*2; ] { export *:2 loc; }
VarOrVal70: (loc) is var4_70=0xE & mvar_70=0 & idx9_70 [ loc = 0x0100E000 + idx9_70*2; ] { export *:2 loc; }
VarOrVal71: (loc) is var4_71=0xE & mvar_71=0 & idx9_71 [ loc = 0x0100E000 + idx9_71*2; ] { export *:2 loc; }
VarOrVal72: (loc) is var4_72=0xE & mvar_72=0 & idx9_72 [ loc = 0x0100E000 + idx9_72*2; ] { export *:2 loc; }
VarOrVal73: (loc) is var4_73=0xE & mvar_73=0 & idx9_73 [ loc = 0x0100E000 + idx9_73*2; ] { export *:2 loc; }
VarOrVal74: (loc) is var4_74=0xE & mvar_74=0 & idx9_74 [ loc = 0x0100E000 + idx9_74*2; ] { export *:2 loc; }
VarOrVal75: (loc) is var4_75=0xE & mvar_75=0 & idx9_75 [ loc = 0x0100E000 + idx9_75*2; ] { export *:2 loc; }
VarOrVal76: (loc) is var4_76=0xE & mvar_76=0 & idx9_76 [ loc = 0x0100E000 + idx9_76*2; ] { export *:2 loc; }
VarOrVal77: (loc) is var4_77=0xE & mvar_77=0 & idx9_77 [ loc = 0x0100E000 + idx9_77*2; ] { export *:2 loc; }
VarOrVal78: (loc) is var4_78=0xE & mvar_78=0 & idx9_78 [ loc = 0x0100E000 + idx9_78*2; ] { export *:2 loc; }
VarOrVal79: (loc) is var4_79=0xE & mvar_79=0 & idx9_79 [ loc = 0x0100E000 + idx9_79*2; ] { export *:2 loc; }
VarOrVal80: (loc) is var4_80=0xE & mvar_80=0 & idx9_80 [ loc = 0x0100E000 + idx9_80*2; ] { export *:2 loc; }
VarOrVal81: (loc) is var4_81=0xE & mvar_81=0 & idx9_81 [ loc = 0x0100E000 + idx9_81*2; ] { export *:2 loc; }
VarOrVal82: (loc) is var4_82=0xE & mvar_82=0 & idx9_82 [ loc = 0x0100E000 + idx9_82*2; ] { export *:2 loc; }
VarOrVal83: (loc) is var4_83=0xE & mvar_83=0 & idx9_83 [ loc = 0x0100E000 + idx9_83*2; ] { export *:2 loc; }
VarOrVal84: (loc) is var4_84=0xE & mvar_84=0 & idx9_84 [ loc = 0x0100E000 + idx9_84*2; ] { export *:2 loc; }
VarOrVal1: (loc) is var4_1=0xF & mvar_1=0 & idx9_1 [ loc = 0x0100F000 + idx9_1*2; ] { export *:2 loc; }
VarOrVal2: (loc) is var4_2=0xF & mvar_2=0 & idx9_2 [ loc = 0x0100F000 + idx9_2*2; ] { export *:2 loc; }
VarOrVal3: (loc) is var4_3=0xF & mvar_3=0 & idx9_3 [ loc = 0x0100F000 + idx9_3*2; ] { export *:2 loc; }
VarOrVal4: (loc) is var4_4=0xF & mvar_4=0 & idx9_4 [ loc = 0x0100F000 + idx9_4*2; ] { export *:2 loc; }
VarOrVal5: (loc) is var4_5=0xF & mvar_5=0 & idx9_5 [ loc = 0x0100F000 + idx9_5*2; ] { export *:2 loc; }
VarOrVal6: (loc) is var4_6=0xF & mvar_6=0 & idx9_6 [ loc = 0x0100F000 + idx9_6*2; ] { export *:2 loc; }
VarOrVal7: (loc) is var4_7=0xF & mvar_7=0 & idx9_7 [ loc = 0x0100F000 + idx9_7*2; ] { export *:2 loc; }
VarOrVal8: (loc) is var4_8=0xF & mvar_8=0 & idx9_8 [ loc = 0x0100F000 + idx9_8*2; ] { export *:2 loc; }
VarOrVal9: (loc) is var4_9=0xF & mvar_9=0 & idx9_9 [ loc = 0x0100F000 + idx9_9*2; ] { export *:2 loc; }
VarOrVal10: (loc) is var4_10=0xF & mvar_10=0 & idx9_10 [ loc = 0x0100F000 + idx9_10*2; ] { export *:2 loc; }
VarOrVal11: (loc) is var4_11=0xF & mvar_11=0 & idx9_11 [ loc = 0x0100F000 + idx9_11*2; ] { export *:2 loc; }
VarOrVal12: (loc) is var4_12=0xF & mvar_12=0 & idx9_12 [ loc = 0x0100F000 + idx9_12*2; ] { export *:2 loc; }
VarOrVal13: (loc) is var4_13=0xF & mvar_13=0 & idx9_13 [ loc = 0x0100F000 + idx9_13*2; ] { export *:2 loc; }
VarOrVal14: (loc) is var4_14=0xF & mvar_14=0 & idx9_14 [ loc = 0x0100F000 + idx9_14*2; ] { export *:2 loc; }
VarOrVal15: (loc) is var4_15=0xF & mvar_15=0 & idx9_15 [ loc = 0x0100F000 + idx9_15*2; ] { export *:2 loc; }
VarOrVal16: (loc) is var4_16=0xF & mvar_16=0 & idx9_16 [ loc = 0x0100F000 + idx9_16*2; ] { export *:2 loc; }
VarOrVal17: (loc) is var4_17=0xF & mvar_17=0 & idx9_17 [ loc = 0x0100F000 + idx9_17*2; ] { export *:2 loc; }
VarOrVal18: (loc) is var4_18=0xF & mvar_18=0 & idx9_18 [ loc = 0x0100F000 + idx9_18*2; ] { export *:2 loc; }
VarOrVal19: (loc) is var4_19=0xF & mvar_19=0 & idx9_19 [ loc = 0x0100F000 + idx9_19*2; ] { export *:2 loc; }
VarOrVal20: (loc) is var4_20=0xF & mvar_20=0 & idx9_20 [ loc = 0x0100F000 + idx9_20*2; ] { export *:2 loc; }
VarOrVal21: (loc) is var4_21=0xF & mvar_21=0 & idx9_21 [ loc = 0x0100F000 + idx9_21*2; ] { export *:2 loc; }
VarOrVal22: (loc) is var4_22=0xF & mvar_22=0 & idx9_22 [ loc = 0x0100F000 + idx9_22*2; ] { export *:2 loc; }
VarOrVal23: (loc) is var4_23=0xF & mvar_23=0 & idx9_23 [ loc = 0x0100F000 + idx9_23*2; ] { export *:2 loc; }
VarOrVal24: (loc) is var4_24=0xF & mvar_24=0 & idx9_24 [ loc = 0x0100F000 + idx9_24*2; ] { export *:2 loc; }
VarOrVal25: (loc) is var4_25=0xF & mvar_25=0 & idx9_25 [ loc = 0x0100F000 + idx9_25*2; ] { export *:2 loc; }
VarOrVal26: (loc) is var4_26=0xF & mvar_26=0 & idx9_26 [ loc = 0x0100F000 + idx9_26*2; ] { export *:2 loc; }
VarOrVal27: (loc) is var4_27=0xF & mvar_27=0 & idx9_27 [ loc = 0x0100F000 + idx9_27*2; ] { export *:2 loc; }
VarOrVal28: (loc) is var4_28=0xF & mvar_28=0 & idx9_28 [ loc = 0x0100F000 + idx9_28*2; ] { export *:2 loc; }
VarOrVal29: (loc) is var4_29=0xF & mvar_29=0 & idx9_29 [ loc = 0x0100F000 + idx9_29*2; ] { export *:2 loc; }
VarOrVal30: (loc) is var4_30=0xF & mvar_30=0 & idx9_30 [ loc = 0x0100F000 + idx9_30*2; ] { export *:2 loc; }
VarOrVal31: (loc) is var4_31=0xF & mvar_31=0 & idx9_31 [ loc = 0x0100F000 + idx9_31*2; ] { export *:2 loc; }
VarOrVal32: (loc) is var4_32=0xF & mvar_32=0 & idx9_32 [ loc = 0x0100F000 + idx9_32*2; ] { export *:2 loc; }
VarOrVal33: (loc) is var4_33=0xF & mvar_33=0 & idx9_33 [ loc = 0x0100F000 + idx9_33*2; ] { export *:2 loc; }
VarOrVal34: (loc) is var4_34=0xF & mvar_34=0 & idx9_34 [ loc = 0x0100F000 + idx9_34*2; ] { export *:2 loc; }
VarOrVal35: (loc) is var4_35=0xF & mvar_35=0 & idx9_35 [ loc = 0x0100F000 + idx9_35*2; ] { export *:2 loc; }
VarOrVal36: (loc) is var4_36=0xF & mvar_36=0 & idx9_36 [ loc = 0x0100F000 + idx9_36*2; ] { export *:2 loc; }
VarOrVal37: (loc) is var4_37=0xF & mvar_37=0 & idx9_37 [ loc = 0x0100F000 + idx9_37*2; ] { export *:2 loc; }
VarOrVal38: (loc) is var4_38=0xF & mvar_38=0 & idx9_38 [ loc = 0x0100F000 + idx9_38*2; ] { export *:2 loc; }
VarOrVal39: (loc) is var4_39=0xF & mvar_39=0 & idx9_39 [ loc = 0x0100F000 + idx9_39*2; ] { export *:2 loc; }
VarOrVal40: (loc) is var4_40=0xF & mvar_40=0 & idx9_40 [ loc = 0x0100F000 + idx9_40*2; ] { export *:2 loc; }
VarOrVal41: (loc) is var4_41=0xF & mvar_41=0 & idx9_41 [ loc = 0x0100F000 + idx9_41*2; ] { export *:2 loc; }
VarOrVal42: (loc) is var4_42=0xF & mvar_42=0 & idx9_42 [ loc = 0x0100F000 + idx9_42*2; ] { export *:2 loc; }
VarOrVal43: (loc) is var4_43=0xF & mvar_43=0 & idx9_43 [ loc = 0x0100F000 + idx9_43*2; ] { export *:2 loc; }
VarOrVal44: (loc) is var4_44=0xF & mvar_44=0 & idx9_44 [ loc = 0x0100F000 + idx9_44*2; ] { export *:2 loc; }
VarOrVal45: (loc) is var4_45=0xF & mvar_45=0 & idx9_45 [ loc = 0x0100F000 + idx9_45*2; ] { export *:2 loc; }
VarOrVal46: (loc) is var4_46=0xF & mvar_46=0 & idx9_46 [ loc = 0x0100F000 + idx9_46*2; ] { export *:2 loc; }
VarOrVal47: (loc) is var4_47=0xF & mvar_47=0 & idx9_47 [ loc = 0x0100F000 + idx9_47*2; ] { export *:2 loc; }
VarOrVal48: (loc) is var4_48=0xF & mvar_48=0 & idx9_48 [ loc = 0x0100F000 + idx9_48*2; ] { export *:2 loc; }
VarOrVal49: (loc) is var4_49=0xF & mvar_49=0 & idx9_49 [ loc = 0x0100F000 + idx9_49*2; ] { export *:2 loc; }
VarOrVal50: (loc) is var4_50=0xF & mvar_50=0 & idx9_50 [ loc = 0x0100F000 + idx9_50*2; ] { export *:2 loc; }
VarOrVal51: (loc) is var4_51=0xF & mvar_51=0 & idx9_51 [ loc = 0x0100F000 + idx9_51*2; ] { export *:2 loc; }
VarOrVal52: (loc) is var4_52=0xF & mvar_52=0 & idx9_52 [ loc = 0x0100F000 + idx9_52*2; ] { export *:2 loc; }
VarOrVal53: (loc) is var4_53=0xF & mvar_53=0 & idx9_53 [ loc = 0x0100F000 + idx9_53*2; ] { export *:2 loc; }
VarOrVal54: (loc) is var4_54=0xF & mvar_54=0 & idx9_54 [ loc = 0x0100F000 + idx9_54*2; ] { export *:2 loc; }
VarOrVal55: (loc) is var4_55=0xF & mvar_55=0 & idx9_55 [ loc = 0x0100F000 + idx9_55*2; ] { export *:2 loc; }
VarOrVal56: (loc) is var4_56=0xF & mvar_56=0 & idx9_56 [ loc = 0x0100F000 + idx9_56*2; ] { export *:2 loc; }
VarOrVal57: (loc) is var4_57=0xF & mvar_57=0 & idx9_57 [ loc = 0x0100F000 + idx9_57*2; ] { export *:2 loc; }
VarOrVal58: (loc) is var4_58=0xF & mvar_58=0 & idx9_58 [ loc = 0x0100F000 + idx9_58*2; ] { export *:2 loc; }
VarOrVal59: (loc) is var4_59=0xF & mvar_59=0 & idx9_59 [ loc = 0x0100F000 + idx9_59*2; ] { export *:2 loc; }
VarOrVal60: (loc) is var4_60=0xF & mvar_60=0 & idx9_60 [ loc = 0x0100F000 + idx9_60*2; ] { export *:2 loc; }
VarOrVal61: (loc) is var4_61=0xF & mvar_61=0 & idx9_61 [ loc = 0x0100F000 + idx9_61*2; ] { export *:2 loc; }
VarOrVal62: (loc) is var4_62=0xF & mvar_62=0 & idx9_62 [ loc = 0x0100F000 + idx9_62*2; ] { export *:2 loc; }
VarOrVal63: (loc) is var4_63=0xF & mvar_63=0 & idx9_63 [ loc = 0x0100F000 + idx9_63*2; ] { export *:2 loc; }
VarOrVal64: (loc) is var4_64=0xF & mvar_64=0 & idx9_64 [ loc = 0x0100F000 + idx9_64*2; ] { export *:2 loc; }
VarOrVal65: (loc) is var4_65=0xF & mvar_65=0 & idx9_65 [ loc = 0x0100F000 + idx9_65*2; ] { export *:2 loc; }
VarOrVal66: (loc) is var4_66=0xF & mvar_66=0 & idx9_66 [ loc = 0x0100F000 + idx9_66*2; ] { export *:2 loc; }
VarOrVal67: (loc) is var4_67=0xF & mvar_67=0 & idx9_67 [ loc = 0x0100F000 + idx9_67*2; ] { export *:2 loc; }
VarOrVal68: (loc) is var4_68=0xF & mvar_68=0 & idx9_68 [ loc = 0x0100F000 + idx9_68*2; ] { export *:2 loc; }
VarOrVal69: (loc) is var4_69=0xF & mvar_69=0 & idx9_69 [ loc = 0x0100F000 + idx9_69*2; ] { export *:2 loc; }
VarOrVal70: (loc) is var4_70=0xF & mvar_70=0 & idx9_70 [ loc = 0x0100F000 + idx9_70*2; ] { export *:2 loc; }
VarOrVal71: (loc) is var4_71=0xF & mvar_71=0 & idx9_71 [ loc = 0x0100F000 + idx9_71*2; ] { export *:2 loc; }
VarOrVal72: (loc) is var4_72=0xF & mvar_72=0 & idx9_72 [ loc = 0x0100F000 + idx9_72*2; ] { export *:2 loc; }
VarOrVal73: (loc) is var4_73=0xF & mvar_73=0 & idx9_73 [ loc = 0x0100F000 + idx9_73*2; ] { export *:2 loc; }
VarOrVal74: (loc) is var4_74=0xF & mvar_74=0 & idx9_74 [ loc = 0x0100F000 + idx9_74*2; ] { export *:2 loc; }
VarOrVal75: (loc) is var4_75=0xF & mvar_75=0 & idx9_75 [ loc = 0x0100F000 + idx9_75*2; ] { export *:2 loc; }
VarOrVal76: (loc) is var4_76=0xF & mvar_76=0 & idx9_76 [ loc = 0x0100F000 + idx9_76*2; ] { export *:2 loc; }
VarOrVal77: (loc) is var4_77=0xF & mvar_77=0 & idx9_77 [ loc = 0x0100F000 + idx9_77*2; ] { export *:2 loc; }
VarOrVal78: (loc) is var4_78=0xF & mvar_78=0 & idx9_78 [ loc = 0x0100F000 + idx9_78*2; ] { export *:2 loc; }
VarOrVal79: (loc) is var4_79=0xF & mvar_79=0 & idx9_79 [ loc = 0x0100F000 + idx9_79*2; ] { export *:2 loc; }
VarOrVal80: (loc) is var4_80=0xF & mvar_80=0 & idx9_80 [ loc = 0x0100F000 + idx9_80*2; ] { export *:2 loc; }
VarOrVal81: (loc) is var4_81=0xF & mvar_81=0 & idx9_81 [ loc = 0x0100F000 + idx9_81*2; ] { export *:2 loc; }
VarOrVal82: (loc) is var4_82=0xF & mvar_82=0 & idx9_82 [ loc = 0x0100F000 + idx9_82*2; ] { export *:2 loc; }
VarOrVal83: (loc) is var4_83=0xF & mvar_83=0 & idx9_83 [ loc = 0x0100F000 + idx9_83*2; ] { export *:2 loc; }
VarOrVal84: (loc) is var4_84=0xF & mvar_84=0 & idx9_84 [ loc = 0x0100F000 + idx9_84*2; ] { export *:2 loc; }

VarOrVal1: Val1 is Val1 { export Val1; }
VarOrVal2: Val2 is Val2 { export Val2; }
VarOrVal3: Val3 is Val3 { export Val3; }
VarOrVal4: Val4 is Val4 { export Val4; }
VarOrVal5: Val5 is Val5 { export Val5; }
VarOrVal6: Val6 is Val6 { export Val6; }
VarOrVal7: Val7 is Val7 { export Val7; }
VarOrVal8: Val8 is Val8 { export Val8; }
VarOrVal9: Val9 is Val9 { export Val9; }
VarOrVal10: Val10 is Val10 { export Val10; }
VarOrVal11: Val11 is Val11 { export Val11; }
VarOrVal12: Val12 is Val12 { export Val12; }
VarOrVal13: Val13 is Val13 { export Val13; }
VarOrVal14: Val14 is Val14 { export Val14; }
VarOrVal15: Val15 is Val15 { export Val15; }
VarOrVal16: Val16 is Val16 { export Val16; }
VarOrVal17: Val17 is Val17 { export Val17; }
VarOrVal18: Val18 is Val18 { export Val18; }
VarOrVal19: Val19 is Val19 { export Val19; }
VarOrVal20: Val20 is Val20 { export Val20; }
VarOrVal21: Val21 is Val21 { export Val21; }
VarOrVal22: Val22 is Val22 { export Val22; }
VarOrVal23: Val23 is Val23 { export Val23; }
VarOrVal24: Val24 is Val24 { export Val24; }
VarOrVal25: Val25 is Val25 { export Val25; }
VarOrVal26: Val26 is Val26 { export Val26; }
VarOrVal27: Val27 is Val27 { export Val27; }
VarOrVal28: Val28 is Val28 { export Val28; }
VarOrVal29: Val29 is Val29 { export Val29; }
VarOrVal30: Val30 is Val30 { export Val30; }
VarOrVal31: Val31 is Val31 { export Val31; }
VarOrVal32: Val32 is Val32 { export Val32; }
VarOrVal33: Val33 is Val33 { export Val33; }
VarOrVal34: Val34 is Val34 { export Val34; }
VarOrVal35: Val35 is Val35 { export Val35; }
VarOrVal36: Val36 is Val36 { export Val36; }
VarOrVal37: Val37 is Val37 { export Val37; }
VarOrVal38: Val38 is Val38 { export Val38; }
VarOrVal39: Val39 is Val39 { export Val39; }
VarOrVal40: Val40 is Val40 { export Val40; }
VarOrVal41: Val41 is Val41 { export Val41; }
VarOrVal42: Val42 is Val42 { export Val42; }
VarOrVal43: Val43 is Val43 { export Val43; }
VarOrVal44: Val44 is Val44 { export Val44; }
VarOrVal45: Val45 is Val45 { export Val45; }
VarOrVal46: Val46 is Val46 { export Val46; }
VarOrVal47: Val47 is Val47 { export Val47; }
VarOrVal48: Val48 is Val48 { export Val48; }
VarOrVal49: Val49 is Val49 { export Val49; }
VarOrVal50: Val50 is Val50 { export Val50; }
VarOrVal51: Val51 is Val51 { export Val51; }
VarOrVal52: Val52 is Val52 { export Val52; }
VarOrVal53: Val53 is Val53 { export Val53; }
VarOrVal54: Val54 is Val54 { export Val54; }
VarOrVal55: Val55 is Val55 { export Val55; }
VarOrVal56: Val56 is Val56 { export Val56; }
VarOrVal57: Val57 is Val57 { export Val57; }
VarOrVal58: Val58 is Val58 { export Val58; }
VarOrVal59: Val59 is Val59 { export Val59; }
VarOrVal60: Val60 is Val60 { export Val60; }
VarOrVal61: Val61 is Val61 { export Val61; }
VarOrVal62: Val62 is Val62 { export Val62; }
VarOrVal63: Val63 is Val63 { export Val63; }
VarOrVal64: Val64 is Val64 { export Val64; }
VarOrVal65: Val65 is Val65 { export Val65; }
VarOrVal66: Val66 is Val66 { export Val66; }
VarOrVal67: Val67 is Val67 { export Val67; }
VarOrVal68: Val68 is Val68 { export Val68; }
VarOrVal69: Val69 is Val69 { export Val69; }
VarOrVal70: Val70 is Val70 { export Val70; }
VarOrVal71: Val71 is Val71 { export Val71; }
VarOrVal72: Val72 is Val72 { export Val72; }
VarOrVal73: Val73 is Val73 { export Val73; }
VarOrVal74: Val74 is Val74 { export Val74; }
VarOrVal75: Val75 is Val75 { export Val75; }
VarOrVal76: Val76 is Val76 { export Val76; }
VarOrVal77: Val77 is Val77 { export Val77; }
VarOrVal78: Val78 is Val78 { export Val78; }
VarOrVal79: Val79 is Val79 { export Val79; }
VarOrVal80: Val80 is Val80 { export Val80; }
VarOrVal81: Val81 is Val81 { export Val81; }
VarOrVal82: Val82 is Val82 { export Val82; }
VarOrVal83: Val83 is Val83 { export Val83; }
VarOrVal84: Val84 is Val84 { export Val84; }



AdcOp: is op_msb=0xFF {}


JmpCallDst: (imm16_1) is imm16_1 {
	c:4 = 0x02000000 + imm16_1 * 4;
	export *:4 c;
}

VmEnd: is AdcOp & op_lsb=0x28 {}

define pcodeop absbgsprent;
define pcodeop absobjanim;
define pcodeop abssprent;
define pcodeop allend;
define pcodeop allsprclr;
define pcodeop allsprdisp;
define pcodeop aviplay;
define pcodeop avistop;
define pcodeop bganim;
define pcodeop bgbufclr;
define pcodeop bgclr;
define pcodeop bgdisp;
define pcodeop bgdisptrn;
define pcodeop bgload;
define pcodeop bgmattr;
define pcodeop bgmreq;
define pcodeop bgmstop;
define pcodeop bgscroll;
define pcodeop bgspranim;
define pcodeop bgsprent;
define pcodeop bgsprpos;
define pcodeop bgsprset;
define pcodeop bgwait;
define pcodeop boxfill;
define pcodeop btwait;
define pcodeop bwait;
define pcodeop calc_call;
define pcodeop continit;
define pcodeop debug;
define pcodeop doornoset;
define pcodeop dummy;
define pcodeop evdef;
define pcodeop evstart;
define pcodeop evstop;
define pcodeop fawait;
define pcodeop gameinit;
define pcodeop halt;
define pcodeop mapattr;
define pcodeop mapdisp;
define pcodeop mapinit;
define pcodeop mapload;
define pcodeop mappos;
define pcodeop mapscroll;
define pcodeop mapwrt;
define pcodeop msgattr;
define pcodeop msgclr;
define pcodeop msgcol;
define pcodeop msginit;
define pcodeop msgout;
define pcodeop msgspd;
define pcodeop msgwait;
define pcodeop nextcom;
define pcodeop nop;
define pcodeop objanim;
define pcodeop palload;
define pcodeop palset;
define pcodeop rand;
define pcodeop sceend;
define pcodeop sceinit;
define pcodeop scereset;
define pcodeop sclblock;
define pcodeop screenclr;
define pcodeop screenin;
define pcodeop screenoff;
define pcodeop screenon;
define pcodeop screenout;
define pcodeop sepan;
define pcodeop sereq;
define pcodeop sereqpv;
define pcodeop sereqspr;
define pcodeop sestop;
define pcodeop setbkcol;
define pcodeop setmark;
define pcodeop setproc;
define pcodeop sevol;
define pcodeop slantclr;
define pcodeop slantset;
define pcodeop sndstop;
define pcodeop spcfunc;
define pcodeop spranim;
define pcodeop sprclr;
define pcodeop sprdir;
define pcodeop sprent;
define pcodeop sprlmt;
define pcodeop sprmark;
define pcodeop sprpos;
define pcodeop sprwait;
define pcodeop sprwalkx;
define pcodeop tmwait;
define pcodeop trace;
define pcodeop userctl;
define pcodeop wait;
define pcodeop workclr;


################################################################

:RET is AdcOp & op_lsb=0x00 {
	PC = RA;
	return [PC];
}

:DIV Var,VarOrVal1 is AdcOp & op_lsb=0x0A; Var; VarOrVal1 {
	Var = Var / VarOrVal1;
}

:MUL Var,VarOrVal1 is AdcOp & op_lsb=0x0B; Var; VarOrVal1 {
	Var = Var * VarOrVal1;
}

:SUB Var,VarOrVal1 is AdcOp & op_lsb=0x0C; Var; VarOrVal1 {
	Var = Var - VarOrVal1;
}

:ADD Var,VarOrVal1 is AdcOp & op_lsb=0x0D; Var; VarOrVal1 {
	Var = Var + VarOrVal1;
}

:DEC Var is AdcOp & op_lsb=0x0E; Var {
	Var = Var - 1;
}

:INC Var is AdcOp & op_lsb=0x0F; Var {
	Var = Var + 1;
}

:MOV Var,VarOrVal1 is AdcOp & op_lsb=0x10; Var; VarOrVal1 {
	Var = VarOrVal1;
}

# EQUAL
:EQU Var,VarOrVal1 is AdcOp & op_lsb=0x11; Var; VarOrVal1 {
	pairs_read = pairs_read + 1;
	
	if (!(Var==VarOrVal1)) goto inst_next;
	pairs_true = pairs_true + 1; 
}

# NOT EQUAL
:NEQ Var,VarOrVal1 is AdcOp & op_lsb=0x12; Var; VarOrVal1 {
	pairs_read = pairs_read + 1;
	
	if (!(Var!=VarOrVal1)) goto inst_next;
	pairs_true = pairs_true + 1; 
} 

# GRETER
:GRE Var,VarOrVal1 is AdcOp & op_lsb=0x13; Var; VarOrVal1 {
	pairs_read = pairs_read + 1;
	
	if (!(Var>VarOrVal1)) goto inst_next;
	pairs_true = pairs_true + 1; 
} 

# LOWER
:LWR Var,VarOrVal1 is AdcOp & op_lsb=0x14; Var; VarOrVal1 {
	pairs_read = pairs_read + 1;
	
	if (!(Var<VarOrVal1)) goto inst_next;
	pairs_true = pairs_true + 1; 
} 

# GREATER EQUAL
:GEQ Var,VarOrVal1 is AdcOp & op_lsb=0x15; Var; VarOrVal1 {
	pairs_read = pairs_read + 1;
	
	if (!(Var>=VarOrVal1)) goto inst_next;
	pairs_true = pairs_true + 1; 
} 

# LESS EQUAL
:LEQ Var,VarOrVal1 is AdcOp & op_lsb=0x16; Var; VarOrVal1 {
	pairs_read = pairs_read + 1;
	
	if (!(Var<=VarOrVal1)) goto inst_next;
	pairs_true = pairs_true + 1; 
} 

:CMP_END is AdcOp & op_lsb=0x1F {
	if (ands_count==1 && pairs_true!=0) goto <next>;
	if (pairs_true==pairs_read) goto <next>;
	
	goto <exit>;
	
	<next>
	pairs_true = 0;
	pairs_read = 0;
	goto inst_next;
	
	<exit>
	pairs_true = 0;
	pairs_read = 0;
	PC = cmp_dest;
	goto [PC];
}

:ALLEND is AdcOp & op_lsb=0x20 {
	allend();
}

:JMP JmpCallDst is AdcOp & op_lsb=0x21; JmpCallDst {
	goto [JmpCallDst];
}

:CALL JmpCallDst is AdcOp & op_lsb=0x22; JmpCallDst {
	RA = inst_next;
	call [JmpCallDst];
}

:EVDEF Val1,VarOrVal1,VarOrVal2 is AdcOp & op_lsb=0x23; Val1; VarOrVal1; VarOrVal2 {
	evdef(Val1,VarOrVal1,VarOrVal2);
}

:END is AdcOp & op_lsb=0x28 {
	halt();
}

:IF (loc),imm16_2 is AdcOp & op_lsb=0x29; imm16_1; imm16_2 [
	loc = inst_next + imm16_1;
] {
	pairs_true = 0;
	pairs_read = 0;
	cmp_dest = loc;
	ands_count = imm16_2;
}

:WHILE (loc),imm16_2 is AdcOp & op_lsb=0x2A; imm16_1; imm16_2 [
	loc = inst_next + imm16_1;
] {
	pairs_true = 0;
	pairs_read = 0;
	cmp_dest = loc;
	ands_count = imm16_2;
}

:NOP is AdcOp & op_lsb=0x2B {
	nop();
}

:ENDIF imm16_1 is AdcOp & op_lsb=0x2D; imm16_1 {
	pairs_true = 0;
	pairs_read = 0;
}

:ENDWHILE (loc) is AdcOp & op_lsb=0x2E; imm16_1 [
	loc = inst_next - imm16_1;
] {
	pairs_true = 0;
	pairs_read = 0;
	
	goto [loc:4];
}

:ELSE (loc) is AdcOp & op_lsb=0x2F; imm16_1 [
	loc = inst_next + imm16_1;
] {
	pairs_true = 0;
	pairs_read = 0;
	
	goto [loc:4];
}

:MSGINIT VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5 is AdcOp & op_lsb=0x30; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4;VarOrVal5 {
	msginit(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5);
}

:MSGATTR VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7,VarOrVal8 is AdcOp & op_lsb=0x32; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4;VarOrVal5;VarOrVal6;VarOrVal7;VarOrVal8 {
	msgattr(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7,VarOrVal8);
}

:MSGOUT VarOrVal1,VarOrVal2,addr_1 is AdcOp & op_lsb=0x33; VarOrVal1; VarOrVal2; addr_1 {
	msgout(VarOrVal1,VarOrVal2,addr_1:4);
}

@include "setmark.inc"

:MSGWAIT is AdcOp & op_lsb=0x36 {
	msgwait();
}

:EVSTART VarOrVal1,VarOrVal2 is AdcOp & op_lsb=0x37; VarOrVal1; VarOrVal2 {
	evstart(VarOrVal1,VarOrVal2);
}

:BGLOAD VarOrVal1,addr_1 is AdcOp & op_lsb=0x39; VarOrVal1; addr_1 {
	bgload(VarOrVal1,addr_1:4);
}

:PALLOAD VarOrVal1,addr_1 is AdcOp & op_lsb=0x3A; VarOrVal1; addr_1 {
	palload(VarOrVal1,addr_1:4);
}

:BGMREQ VarOrVal1,addr_1 is AdcOp & op_lsb=0x3B; VarOrVal1; addr_1 {
	bgmreq(VarOrVal1,addr_1:4);
}

:SPRCLR VarOrVal1 is AdcOp & op_lsb=0x3C; VarOrVal1 {
	sprclr(VarOrVal1);
}

:ABSOBJANIM VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7,VarOrVal8 is AdcOp & op_lsb=0x3D; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4;VarOrVal5;VarOrVal6;VarOrVal7;VarOrVal8 {
	absobjanim(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7,VarOrVal8);
}

:OBJANIM VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7,VarOrVal8 is AdcOp & op_lsb=0x3E; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4;VarOrVal5;VarOrVal6;VarOrVal7;VarOrVal8 {
	objanim(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7,VarOrVal8);
}

:ALLSPRCLR is AdcOp & op_lsb=0x3F {
	allsprclr();
}

:MSGCLR is AdcOp & op_lsb=0x40 {
	msgclr();
}

:SCREENCLR is AdcOp & op_lsb=0x41 {
	screenclr();
}

:SCREENON is AdcOp & op_lsb=0x42 {
	screenon();
}

:SCREENOFF is AdcOp & op_lsb=0x43 {
	screenoff();
}

:SCREENIN is AdcOp & op_lsb=0x44 {
	screenin();
}

:SCREENOUT is AdcOp & op_lsb=0x45 {
	screenout();
}

:BGDISP VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6 is AdcOp & op_lsb=0x46; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4;VarOrVal5;VarOrVal6 {
	bgdisp(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6);
}

:BGANIM VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7 is AdcOp & op_lsb=0x47; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4;VarOrVal5;VarOrVal6;VarOrVal7 {
	bganim(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7);
}

:BGSCROLL VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5 is AdcOp & op_lsb=0x48; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4;VarOrVal5 {
	bgscroll(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5);
}

:PALSET VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5 is AdcOp & op_lsb=0x49; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4;VarOrVal5 {
	palset(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5);
}

:BGWAIT is AdcOp & op_lsb=0x4A {
	bgwait();
}

:WAIT VarOrVal1,VarOrVal2 is AdcOp & op_lsb=0x4B; VarOrVal1;VarOrVal2 {
	wait(VarOrVal1,VarOrVal2);
}

:BWAIT is AdcOp & op_lsb=0x4C {
	bwait();
}

:BOXFILL VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7 is AdcOp & op_lsb=0x4D; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4;VarOrVal5;VarOrVal6;VarOrVal7 {
	boxfill(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7);
}

:BGCLR VarOrVal1 is AdcOp & op_lsb=0x4E; VarOrVal1 {
	bgclr(VarOrVal1);
}

:SETBKCOL VarOrVal1,VarOrVal2,VarOrVal3 is AdcOp & op_lsb=0x4F; VarOrVal1;VarOrVal2;VarOrVal3 {
	setbkcol(VarOrVal1,VarOrVal2,VarOrVal3);
}

:MSGCOL VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6 is AdcOp & op_lsb=0x50; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4;VarOrVal5;VarOrVal6 {
	msgcol(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6);
}

:MSGSPD VarOrVal1 is AdcOp & op_lsb=0x51; VarOrVal1 {
	msgspd(VarOrVal1);
}

:MAPINIT VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6 is AdcOp & op_lsb=0x52; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4;VarOrVal5;VarOrVal6 {
	mapinit(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6);
}

:MAPLOAD VarOrVal1,addr_1 is AdcOp & op_lsb=0x53; VarOrVal1; addr_1 {
	mapload(VarOrVal1,addr_1:4);
}

:MAPDISP VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6 is AdcOp & op_lsb=0x54; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4;VarOrVal5;VarOrVal6 {
	mapdisp(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6);
}

:SPRENT VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7,VarOrVal8 is AdcOp & op_lsb=0x55; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4;VarOrVal5;VarOrVal6;VarOrVal7;VarOrVal8 {
	sprent(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7,VarOrVal8);
}

:SETPROC VarOrVal1 is AdcOp & op_lsb=0x56; VarOrVal1 {
	setproc(VarOrVal1);
}

:SCEINIT is AdcOp & op_lsb=0x57 {
	sceinit();
}

:USERCTL VarOrVal1 is AdcOp & op_lsb=0x58; VarOrVal1 {
	userctl(VarOrVal1);
}

:MAPATTR VarOrVal1 is AdcOp & op_lsb=0x59; VarOrVal1 {
	mapattr(VarOrVal1);
}

:MAPPOS VarOrVal1,VarOrVal2,VarOrVal3 is AdcOp & op_lsb=0x5A; VarOrVal1;VarOrVal2;VarOrVal3 {
	mappos(VarOrVal1,VarOrVal2,VarOrVal3);
}

:SPRPOS VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4 is AdcOp & op_lsb=0x5B; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4 {
	sprpos(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4);
}

:SPRANIM VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4 is AdcOp & op_lsb=0x5C; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4 {
	spranim(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4);
}

:SPRDIR VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5 is AdcOp & op_lsb=0x5D; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4;VarOrVal5 {
	sprdir(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5);
}

:GAMEINIT is AdcOp & op_lsb=0x5E {
	gameinit();
}

:CONTINIT is AdcOp & op_lsb=0x5F {
	continit();
}

:SCEEND is AdcOp & op_lsb=0x60 {
	sceend();
}

:MAPSCROLL VarOrVal1,VarOrVal2,VarOrVal3 is AdcOp & op_lsb=0x61; VarOrVal1;VarOrVal2;VarOrVal3 {
	mapscroll(VarOrVal1,VarOrVal2,VarOrVal3);
}

:SPRLMT VarOrVal1,VarOrVal2,VarOrVal3 is AdcOp & op_lsb=0x62; VarOrVal1;VarOrVal2;VarOrVal3 {
	sprlmt(VarOrVal1,VarOrVal2,VarOrVal3);
}

:SPRWALKX VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5 is AdcOp & op_lsb=0x63; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4;VarOrVal5 {
	sprwalkx(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5);
}

:ALLSPRDISP is AdcOp & op_lsb=0x64 {
	allsprdisp();
}

:MAPWRT VarOrVal1,VarOrVal2,addr_1 is AdcOp & op_lsb=0x65; VarOrVal1;VarOrVal2;addr_1 {
	mapwrt(VarOrVal1,VarOrVal2,addr_1:4);
}

:SPRWAIT VarOrVal1 is AdcOp & op_lsb=0x66; VarOrVal1 {
	sprwait(VarOrVal1);
}

:SEREQ VarOrVal1,addr_1 is AdcOp & op_lsb=0x67; VarOrVal1;addr_1 {
	sereq(VarOrVal1,addr_1:4);
}

:SNDSTOP is AdcOp & op_lsb=0x68 {
	sndstop();
}

:SESTOP addr_1 is AdcOp & op_lsb=0x69; addr_1 {
	sestop(addr_1:4);
}

:BGMSTOP is AdcOp & op_lsb=0x6A {
	bgmstop();
}

:DOORNOSET is AdcOp & op_lsb=0x6B {
	doornoset();
}

:RAND Val1,Val2,Var is AdcOp & op_lsb=0x6C; Val1;Val2;Var {
	rand(Val1,Val2,Var);
}

:BTWAIT VarOrVal1 is AdcOp & op_lsb=0x6D; VarOrVal1 {
	btwait(VarOrVal1);
}

:FAWAIT is AdcOp & op_lsb=0x6E {
	fawait();
}

@include "sclblock.inc"

:EVSTOP is AdcOp & op_lsb=0x70 {
	evstop();
}

:SEREQPV VarOrVal1,VarOrVal2,VarOrVal3,addr_1 is AdcOp & op_lsb=0x71; VarOrVal1;VarOrVal2;VarOrVal3;addr_1 {
	sereqpv(VarOrVal1,VarOrVal2,VarOrVal3,addr_1:4);
}

:SEREQSPR VarOrVal1,VarOrVal2,VarOrVal3,addr_1 is AdcOp & op_lsb=0x72; VarOrVal1;VarOrVal2;VarOrVal3;addr_1 {
	sereqspr(VarOrVal1,VarOrVal2,VarOrVal3,addr_1:4);
}

:SCERESET is AdcOp & op_lsb=0x73 {
	scereset();
}

:BGSPRENT VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6 is AdcOp & op_lsb=0x74; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4;VarOrVal5;VarOrVal6 {
	bgsprent(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6);
}

:BGSPRPOS VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4 is AdcOp & op_lsb=0x75; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4 {
	bgsprpos(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4);
}

:BGSPRSET VarOrVal1,VarOrVal2 is AdcOp & op_lsb=0x76; VarOrVal1;VarOrVal2 {
	bgsprset(VarOrVal1,VarOrVal2);
}

:SLANTSET VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4 is AdcOp & op_lsb=0x77; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4 {
	slantset(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4);
}

:SLANTCLR is AdcOp & op_lsb=0x78 {
	slantclr();
}

:DUMMY is AdcOp & op_lsb=0x79 {
	dummy();
}

:SPCFUNC VarOrVal1 is AdcOp & op_lsb=0x7A; VarOrVal1;VarOrVal2 & idx9_1=0 {
	spcfunc(VarOrVal1);
}
:SPCFUNC VarOrVal1,(VarOrVal3) is AdcOp & op_lsb=0x7A; VarOrVal1;VarOrVal2 & idx9_1=1;VarOrVal3 {
	spcfunc(VarOrVal1,VarOrVal3);
}
:SPCFUNC VarOrVal1,(VarOrVal3,VarOrVal4) is AdcOp & op_lsb=0x7A; VarOrVal1;VarOrVal2 & idx9_1=2;VarOrVal3;VarOrVal4 {
	spcfunc(VarOrVal1,VarOrVal3,VarOrVal4);
}
:SPCFUNC VarOrVal1,(VarOrVal3,VarOrVal4,VarOrVal5) is AdcOp & op_lsb=0x7A; VarOrVal1;VarOrVal2 & idx9_1=3;VarOrVal3;VarOrVal4;VarOrVal5 {
	spcfunc(VarOrVal1,VarOrVal3,VarOrVal4,VarOrVal5);
}
:SPCFUNC VarOrVal1,(VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6) is AdcOp & op_lsb=0x7A; VarOrVal1;VarOrVal2 & idx9_1=4;VarOrVal3;VarOrVal4;VarOrVal5;VarOrVal6 {
	spcfunc(VarOrVal1,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6);
}
:SPCFUNC VarOrVal1,(VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7) is AdcOp & op_lsb=0x7A; VarOrVal1;VarOrVal2 & idx9_1=5;VarOrVal3;VarOrVal4;VarOrVal5;VarOrVal6;VarOrVal7 {
	spcfunc(VarOrVal1,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7);
}
:SPCFUNC VarOrVal1,(VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7,VarOrVal8) is AdcOp & op_lsb=0x7A; VarOrVal1;VarOrVal2 & idx9_1=6;VarOrVal3;VarOrVal4;VarOrVal5;VarOrVal6;VarOrVal7;VarOrVal8 {
	spcfunc(VarOrVal1,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7,VarOrVal8);
}
:SPCFUNC VarOrVal1,(VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7,VarOrVal8,VarOrVal9) is AdcOp & op_lsb=0x7A; VarOrVal1;VarOrVal2 & idx9_1=7;VarOrVal3;VarOrVal4;VarOrVal5;VarOrVal6;VarOrVal7;VarOrVal8;VarOrVal9 {
	spcfunc(VarOrVal1,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7,VarOrVal8,VarOrVal9);
}
:SPCFUNC VarOrVal1,(VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7,VarOrVal8,VarOrVal9,VarOrVal10) is AdcOp & op_lsb=0x7A; VarOrVal1;VarOrVal2 & idx9_1=8;VarOrVal3;VarOrVal4;VarOrVal5;VarOrVal6;VarOrVal7;VarOrVal8;VarOrVal9;VarOrVal10 {
	spcfunc(VarOrVal1,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7,VarOrVal8,VarOrVal9,VarOrVal10);
}
:SPCFUNC VarOrVal1,(VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7,VarOrVal8,VarOrVal9,VarOrVal10,VarOrVal11) is AdcOp & op_lsb=0x7A; VarOrVal1;VarOrVal2 & idx9_1=9;VarOrVal3;VarOrVal4;VarOrVal5;VarOrVal6;VarOrVal7;VarOrVal8;VarOrVal9;VarOrVal10;VarOrVal11 {
	spcfunc(VarOrVal1,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7,VarOrVal8,VarOrVal9,VarOrVal10,VarOrVal11);
}

:SEPAN VarOrVal1,addr_1 is AdcOp & op_lsb=0x7B; VarOrVal1;addr_1 {
	sepan(VarOrVal1,addr_1:4);
}

:SEVOL VarOrVal1,addr_1 is AdcOp & op_lsb=0x7C; VarOrVal1;addr_1 {
	sevol(VarOrVal1,addr_1:4);
}

:BGDISPTRN VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7 is AdcOp & op_lsb=0x7D; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4;VarOrVal5;VarOrVal6;VarOrVal7 {
	bgdisptrn(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7);
}

:DEBUG VarOrVal1 is AdcOp & op_lsb=0x7E; VarOrVal1 {
	debug(VarOrVal1);
}

:TRACE VarOrVal1 is AdcOp & op_lsb=0x7F; VarOrVal1 {
	trace(VarOrVal1);
}

:TMWAIT VarOrVal1,VarOrVal2 is AdcOp & op_lsb=0x80; VarOrVal1;VarOrVal2 {
	tmwait(VarOrVal1,VarOrVal2);
}

:BGSPRANIM VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7,VarOrVal8,VarOrVal9 is AdcOp & op_lsb=0x81; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4;VarOrVal5;VarOrVal6;VarOrVal7;VarOrVal8;VarOrVal9 {
	bgspranim(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7,VarOrVal8,VarOrVal9);
}

:ABSSPRENT VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7,VarOrVal8 is AdcOp & op_lsb=0x82; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4;VarOrVal5;VarOrVal6;VarOrVal7;VarOrVal8 {
	abssprent(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6,VarOrVal7,VarOrVal8);
}

:NEXTCOM VarOrVal1 is AdcOp & op_lsb=0x83; VarOrVal1 {
	nextcom(VarOrVal1);
}

:WORKCLR is AdcOp & op_lsb=0x84 {
	workclr();
}

:BGBUFCLR VarOrVal1,VarOrVal2 is AdcOp & op_lsb=0x85; VarOrVal1;VarOrVal2 {
	bgbufclr(VarOrVal1,VarOrVal2);
}

:ABSBGSPRENT VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6 is AdcOp & op_lsb=0x86; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4;VarOrVal5;VarOrVal6 {
	absbgsprent(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,VarOrVal6);
}

:AVIPLAY VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,addr_1 is AdcOp & op_lsb=0x87; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4;VarOrVal5;addr_1 {
	aviplay(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5,addr_1:4);
}

:AVISTOP is AdcOp & op_lsb=0x88 {
	avistop();
}

:SPRMARK VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5 is AdcOp & op_lsb=0x89; VarOrVal1;VarOrVal2;VarOrVal3;VarOrVal4;VarOrVal5 {
	sprmark(VarOrVal1,VarOrVal2,VarOrVal3,VarOrVal4,VarOrVal5);
}

:BGMATTR VarOrVal1,VarOrVal2 is AdcOp & op_lsb=0x8A; VarOrVal1;VarOrVal2 {
	bgmattr(VarOrVal1,VarOrVal2);
}

:STR00 is AdcOp & op_lsb=0x90 {} # just a strings filler
